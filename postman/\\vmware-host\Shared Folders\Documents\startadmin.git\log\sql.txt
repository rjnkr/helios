{
	"info": {
		"_postman_id": "2b309730-2868-461a-9a56-45c9d4d3bb8e",
		"name": "Helios",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Types",
			"item": [
				{
					"name": "Create database",
					"item": [
						{
							"name": "Create table",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6d1b1dd9-bb57-4f6d-b3c0-c7e0de6edb69",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "26fa9841-8026-4f77-8df6-8cfdc5a42320",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{create_database_url}}?FILLDATA=true",
									"host": [
										"{{create_database_url}}"
									],
									"query": [
										{
											"key": "FILLDATA",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create view",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e150abf9-60f8-408a-9646-92d3e4d7ad9e",
										"exec": [
											"pm.test(\"Status code should not 500\", function () {",
											"    pm.response.to.not.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{create_view_url}}",
									"host": [
										"{{create_view_url}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5c884dab-aaa7-410f-a3cf-8baa3eb482dc",
								"type": "text/javascript",
								"exec": [
									"",
									"let aanmaken_database = pm.environment.get(\"create_database\");",
									"let aanmaken_views = pm.environment.get(\"create_views\");",
									"",
									"let onderdeel = pm.environment.get(\"onderdeel\");",
									"",
									"let base_url = pm.environment.get(\"base_url\");",
									"let url = pm.environment.get(\"url\");",
									"",
									"",
									"if (aanmaken_database === \"false\")",
									"{",
									"    console.log(\"Aanmaken \" + onderdeel + \" database overslaan\");",
									"    pm.environment.set(\"create_database_url\", base_url + \"/dummy.php\");",
									"}",
									"else",
									"{",
									"    pm.environment.set(\"create_database_url\", url + \"/CreateTable\");",
									"}",
									"",
									"if (aanmaken_views === \"false\")",
									"{",
									"    console.log(\"Aanmaken \" + onderdeel + \" database views overslaan\");",
									"    pm.environment.set(\"create_view_url\", base_url + \"/dummy.php\");",
									"}",
									"else",
									"{",
									"    pm.environment.set(\"create_view_url\", url + \"/CreateViews\");",
									"}"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2b3f7853-92aa-43e1-8f71-5c3b1eb393a3",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Basis get",
					"item": [
						{
							"name": "Alle velden",
							"item": [
								{
									"name": "GetObjects",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9482d8a-dafa-4427-b1be-a01f1e5157a0",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"// Data voor volgende testen",
													"let savedData = JSON.stringify(jsonData);",
													"pm.environment.set(\"savedData\", savedData);",
													"",
													"pm.environment.set(\"getObjectId\", jsonData.dataset[0].ID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9e2de65d-0b92-4fa3-9b85-ccac51d4f5b4",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects  Sorteer op ID ASC",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9482d8a-dafa-4427-b1be-a01f1e5157a0",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"// Data voor volgende testen",
													"let savedData = JSON.stringify(jsonData);",
													"pm.environment.set(\"savedData\", savedData);",
													"",
													"pm.environment.set(\"getObjectId\", jsonData.dataset[0].ID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9e2de65d-0b92-4fa3-9b85-ccac51d4f5b4",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?SORT=ID",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "SORT",
													"value": "ID"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects  Sorteer op ID DESC",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9482d8a-dafa-4427-b1be-a01f1e5157a0",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"pm.test(\"First record is last\", function () {",
													"",
													"    let lastID = jsonData.dataset[jsonData.dataset.length-1].ID",
													"    pm.expect(lastID).to.eql(pm.environment.get(\"getObjectId\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9e2de65d-0b92-4fa3-9b85-ccac51d4f5b4",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?SORT=ID DESC",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "SORT",
													"value": "ID DESC"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Max",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													"let savedData = JSON.parse(pm.environment.get(\"savedData\"));",
													"",
													"let jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"Aantal records == 2\", function () {",
													"    pm.expect(jsonData.dataset.length).to.eql(2);",
													"});",
													"",
													"pm.test(\"Totaal == orgineel\", function () {",
													"    pm.expect(jsonData.totaal).to.eql(savedData.totaal);",
													"});",
													"",
													"pm.test(\"LaatsteAanpassing == orgineel\", function () {",
													"    pm.expect(jsonData.laatste_aanpassing).to.eql(savedData.laatste_aanpassing);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?MAX=2",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "MAX",
													"value": "2"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Groep = 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													"let jsonData = pm.response.json();",
													"let groep = pm.environment.get(\"groep\");",
													"",
													"",
													"pm.test(\"Aantal records == 9\", function () {",
													"    pm.expect(jsonData.dataset.length).to.eql(9);",
													"});",
													"",
													"pm.test(\"Totaal == orgineel\", function () {",
													"    pm.expect(jsonData.totaal).to.eql(\"9\");",
													"});",
													"",
													"pm.test(\"GROEP == 1\", function () {",
													"    var fout = 0;",
													"    ",
													"    for (index = 0; index < jsonData.dataset.length; ++index) ",
													"    {",
													"        if (parseInt(jsonData.dataset[index].GROEP) !== groep)",
													"            fout = 1;",
													"    }",
													"    pm.expect(fout).to.eql(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													"pm.environment.set(\"groep\", 1);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/GetObjects?GROEP={{groep}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "GROEP",
													"value": "{{groep}}"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "dc211dd2-0212-4bd9-9dc4-2a3361f46a38",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "90c899af-7ac7-4e30-9dd7-9f8ed5765a8f",
										"type": "text/javascript",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test('Heeft ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('ID');",
											"});",
											"",
											"pm.test('Heeft GROEP', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('GROEP');",
											"});",
											"",
											"pm.test('Heeft CODE', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('CODE');",
											"});",
											"",
											"pm.test('Heeft EXT_REF', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('EXT_REF');",
											"});",
											"",
											"pm.test('Heeft OMSCHRIJVING', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('OMSCHRIJVING');",
											"});",
											"",
											"pm.test('Heeft SORTEER_VOLGORDE', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('SORTEER_VOLGORDE');",
											"});",
											"",
											"pm.test('Heeft READ_ONLY', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('READ_ONLY');",
											"});",
											"",
											"pm.test('Heeft VERWIJDERD', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('VERWIJDERD');",
											"});",
											"",
											"pm.test('Heeft LAATSTE_AANPASSING', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('LAATSTE_AANPASSING');",
											"});",
											"",
											"pm.test(\"VERWIJDERD == 0\", function () {",
											"    var verwijderd = 0;",
											"    ",
											"    for (index = 0; index < jsonData.dataset.length; ++index) ",
											"    {",
											"        verwijderd += parseInt(jsonData.dataset[index].VERWIJDERD);   ",
											"    }",
											"    pm.expect(verwijderd).to.eql(0);",
											"    ",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "GetObjects VELDEN",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "64e90e05-c211-452c-acbb-f3f27f913751",
										"exec": [
											"let jsonData = pm.response.json();",
											"let savedData = JSON.parse(pm.environment.get(\"savedData\"));",
											"",
											"",
											"pm.test(\"Aantal velden == 2\", function () {",
											"    let velden = Object.keys(jsonData.dataset[0]).length;",
											"    pm.expect(velden).to.eql(2);",
											"});",
											"",
											"pm.test(\"Totaal == orgineel\", function () {",
											"    pm.expect(jsonData.totaal).to.eql(savedData.totaal);",
											"});",
											"",
											"pm.test(\"LaatsteAanpassing == orgineel\", function () {",
											"    pm.expect(jsonData.laatste_aanpassing).to.eql(savedData.laatste_aanpassing);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/GetObjects?MAX=2&VELDEN=ID, OMSCHRIJVING",
									"host": [
										"{{url}}"
									],
									"path": [
										"GetObjects"
									],
									"query": [
										{
											"key": "MAX",
											"value": "2"
										},
										{
											"key": "VELDEN",
											"value": "ID, OMSCHRIJVING"
										}
									]
								},
								"description": "Haal alle types op"
							},
							"response": []
						},
						{
							"name": "GetObjects LAASTE_AANPASSING",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "64e90e05-c211-452c-acbb-f3f27f913751",
										"exec": [
											"let jsonData = pm.response.json();",
											"let savedData = JSON.parse(pm.environment.get(\"savedData\"));",
											"",
											"pm.test(\"Dataset == null\", function () {",
											"    let velden = Object.keys([0]).length;",
											"    pm.expect(jsonData.dataset).to.eql(null);",
											"});",
											"",
											"pm.test(\"Totaal == orgineel\", function () {",
											"    pm.expect(jsonData.totaal).to.eql(savedData.totaal);",
											"});",
											"",
											"pm.test(\"LaatsteAanpassing == orgineel\", function () {",
											"    pm.expect(jsonData.laatste_aanpassing).to.eql(savedData.laatste_aanpassing);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/GetObjects?LAATSTE_AANPASSING=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"GetObjects"
									],
									"query": [
										{
											"key": "LAATSTE_AANPASSING",
											"value": "true"
										}
									]
								},
								"description": "Haal alle types op"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "52272bfe-6a3f-4b2a-9953-b55c706adb1a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ac9874c6-8a2e-4386-bd9d-cc0f618b6e8f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test('Heeft totaal', function() {",
									"  pm.expect(jsonData).to.have.property('totaal');",
									"});",
									"",
									"pm.test('Heeft laatste aanpassing', function() {",
									"  pm.expect(jsonData).to.have.property('laatste_aanpassing');",
									"});",
									"",
									"pm.test('Heeft dataset', function() {",
									"  pm.expect(jsonData).to.have.property('dataset');",
									"});"
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Modificatie",
					"item": [
						{
							"name": "Alle Velden",
							"item": [
								{
									"name": "SaveObject",
									"item": [
										{
											"name": "Nieuw record opslaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
														"exec": [
															"",
															"let record = {",
															"  \"GROEP\": 1,",
															"  \"CODE\": \"CODE\",",
															"  \"EXT_REF\": \"EXT_REF\",",
															"  \"OMSCHRIJVING\": \"OMSCHRIJVING\",",
															"  \"SORTEER_VOLGORDE\": 99,",
															"  \"READ_ONLY\": 0",
															"};",
															"",
															"var body = JSON.stringify(record); ",
															"pm.environment.set('request_body', body);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
														"exec": [
															"",
															"let skipTest = ((pm.response.code !== 200) || (pm.environment.get(\"skipTest\") === true));",
															"",
															"if (skipTest === false)",
															"{",
															"    let jsonData = pm.response.json();",
															"    pm.environment.set(\"nieuwID\", jsonData.ID);",
															"    console.log(\"nieuwID: \"+ jsonData.ID);",
															"}",
															"else",
															"{",
															"   pm.environment.set(\"nieuwID\", -1); ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{modify_database_url}}",
													"host": [
														"{{modify_database_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update record",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
														"exec": [
															"",
															"let record = {",
															"  \"ID\": -1,",
															"  \"GROEP\": 1000,",
															"  \"CODE\": \"EDOC\",",
															"  \"EXT_REF\": \"REF_EXT\",",
															"  \"OMSCHRIJVING\": \"GNIVJIRHCSMO\",",
															"  \"SORTEER_VOLGORDE\": 0,",
															"  \"READ_ONLY\": 1",
															"};",
															"record.ID =  pm.environment.get(\"nieuwID\");",
															"console.log(\"Update id=\" + record.ID);",
															"",
															"var body = JSON.stringify(record); ",
															"pm.environment.set('request_body', body);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{modify_database_url}}",
													"host": [
														"{{modify_database_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7a603193-529a-4d0a-a746-893b6126a444",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "94ec227e-e4a0-4701-ba6c-fb1ea870da97",
												"type": "text/javascript",
												"exec": [
													"",
													"let jsonData = null;",
													"let postData = null;",
													"let skipTest = ((pm.response.code !== 200) || (pm.environment.get(\"skipTest\") === true));",
													"",
													"if (skipTest === false)",
													"{",
													"    postData = JSON.parse(pm.environment.get('request_body'));",
													"    jsonData = pm.response.json();",
													"}",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"ID\", function () {",
													"    if (postData.hasOwnProperty('ID'))",
													"    pm.expect(jsonData.ID.toString()).to.eql(postData.ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"GROEP\", function () {",
													"    if (postData.hasOwnProperty('GROEP'))",
													"        pm.expect(jsonData.GROEP.toString()).to.eql(postData.GROEP.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"CODE\", function () {",
													"    if (postData.hasOwnProperty('CODE'))",
													"        pm.expect(jsonData.CODE.toString()).to.eql(postData.CODE.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"EXT_REF\", function () {",
													"    if (postData.hasOwnProperty('EXT_REF'))",
													"        pm.expect(jsonData.EXT_REF.toString()).to.eql(postData.EXT_REF.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"OMSCHRIJVING\", function () {",
													"    if (postData.hasOwnProperty('OMSCHRIJVING'))",
													"        pm.expect(jsonData.OMSCHRIJVING.toString()).to.eql(postData.OMSCHRIJVING.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"SORTEER_VOLGORDE\", function () {",
													"    if (postData.hasOwnProperty('SORTEER_VOLGORDE'))",
													"        pm.expect(jsonData.SORTEER_VOLGORDE.toString()).to.eql(postData.SORTEER_VOLGORDE.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"READ_ONLY\", function () {",
													"    if (postData.hasOwnProperty('READ_ONLY'))",
													"        pm.expect(jsonData.READ_ONLY.toString()).to.eql(postData.READ_ONLY.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"VERWIJDERD\", function () {",
													"    pm.expect(jsonData.VERWIJDERD.toString()).to.eql('0');",
													"});",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "GetObject",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													"",
													"let getObjectId =  pm.environment.get(\"getObjectId\");",
													"console.log(\"GetObject id=\" + getObjectId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject?ID={{getObjectId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "{{getObjectId}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "17b676fc-063c-4f1a-8c42-f636d29774b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f5bab96b-eb48-4ee0-b35d-0b32478f8e0e",
										"type": "text/javascript",
										"exec": [
											"// 200 Succesvol",
											"// 409 Kan record niet opslaan vanwege duplicatie",
											"pm.test(\"Status code is 200 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,409]);",
											"});",
											"",
											"let jsonData = null;",
											"let skipTest = false;",
											"",
											"if (pm.request.method === 'GET')",
											"    skipTest = false;",
											"else",
											"    skipTest = ((pm.response.code !== 200) || (pm.environment.get(\"skipTest\") === true));",
											"",
											"if (pm.responsecode === 409)",
											"    console.log(pm.response.headers.get('X-Error-Message'));",
											"",
											"if (skipTest === false)",
											"    jsonData = pm.response.json();",
											"    ",
											"// Test of velden aanwezig zijn",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft ID', function() {",
											"  pm.expect(jsonData).to.have.property('ID');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft GROEP', function() {",
											"  pm.expect(jsonData).to.have.property('GROEP');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft CODE', function() {",
											"  pm.expect(jsonData).to.have.property('CODE');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft EXT_REF', function() {",
											"  pm.expect(jsonData).to.have.property('EXT_REF');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft OMSCHRIJVING', function() {",
											"  pm.expect(jsonData).to.have.property('OMSCHRIJVING');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft SORTEER_VOLGORDE', function() {",
											"  pm.expect(jsonData).to.have.property('SORTEER_VOLGORDE');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft READ_ONLY', function() {",
											"  pm.expect(jsonData).to.have.property('READ_ONLY');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft VERWIJDERD', function() {",
											"  pm.expect(jsonData).to.have.property('VERWIJDERD');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft LAATSTE_AANPASSING', function() {",
											"  pm.expect(jsonData).to.have.property('LAATSTE_AANPASSING');",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "DeleteObject",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "21f72e65-5e76-4bae-b63d-c77fdf6098bf",
										"exec": [
											"let nieuwID =  pm.environment.get(\"nieuwID\");",
											"console.log(\"DeleteObject id=\" + nieuwID);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5fde7d49-65fa-4709-b00c-56ab7870faeb",
										"exec": [
											"let skipTest = pm.environment.get(\"skipTest\");",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{delete_database_url}}?ID={{nieuwID}}",
									"host": [
										"{{delete_database_url}}"
									],
									"query": [
										{
											"key": "ID",
											"value": "{{nieuwID}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "bc0d7385-33b4-4631-acfd-bca14a71d49f",
								"type": "text/javascript",
								"exec": [
									"",
									"let modify_database = pm.environment.get(\"modify_database\");",
									"",
									"let onderdeel = pm.environment.get(\"onderdeel\");",
									"",
									"let base_url = pm.environment.get(\"base_url\");",
									"let url = pm.environment.get(\"url\");",
									"",
									"",
									"if (modify_database === \"false\")",
									"{",
									"    console.log(\"Modificatie \" + onderdeel + \" overslaan\");",
									"    pm.environment.set(\"modify_database_url\", base_url + \"/dummy.php\");",
									"    pm.environment.set(\"delete_database_url\", base_url + \"/dummy.php\");",
									"    pm.environment.set(\"skipTest\", true);",
									"}",
									"else",
									"{",
									"    pm.environment.set(\"modify_database_url\", url + \"/SaveObject\");",
									"    pm.environment.set(\"delete_database_url\", url + \"/DeleteObject\");",
									"    pm.environment.set(\"skipTest\", false);",
									"}",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f1dbb867-ff10-432f-952f-85a0fc184493",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Error",
					"item": [
						{
							"name": "Data missing 404",
							"item": [
								{
									"name": "GetObject geen data",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject?ID=-1",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "-1"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "09e08933-f530-4685-8377-4d7e7a626393",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "75d66cec-853b-4818-b4e6-a5ed70208368",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data validatie error 405",
							"item": [
								{
									"name": "GetObjects LAASTE_AANPASSING geen bool",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "64e90e05-c211-452c-acbb-f3f27f913751",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?LAATSTE_AANPASSING=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "LAATSTE_AANPASSING",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObject met verkeerd ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject?ID=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "ascii"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GetObjects Max geen int",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?MAX=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "MAX",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Start geen int",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?START=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "START",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Start < 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?START=-1",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "START",
													"value": "-1"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Groep geen int",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?GROEP=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "GROEP",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"ID\": \"ascii\",",
													"  \"GROEP\": 1,",
													"  \"CODE\": \"CODE\",",
													"  \"EXT_REF\": \"EXT_REF\",",
													"  \"OMSCHRIJVING\": \"OMSCHRIJVING\",",
													"  \"SORTEER_VOLGORDE\": 99,",
													"  \"READ_ONLY\": 0",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan Groep geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"GROEP\": \"ascii\",",
													"  \"CODE\": \"CODE\",",
													"  \"EXT_REF\": \"EXT_REF\",",
													"  \"OMSCHRIJVING\": \"OMSCHRIJVING\",",
													"  \"SORTEER_VOLGORDE\": 99,",
													"  \"READ_ONLY\": 0",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan SORTEER_VOLGORDE geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"GROEP\": 1,",
													"  \"CODE\": \"CODE\",",
													"  \"EXT_REF\": \"EXT_REF\",",
													"  \"OMSCHRIJVING\": \"OMSCHRIJVING\",",
													"  \"SORTEER_VOLGORDE\": \"ascii\",",
													"  \"READ_ONLY\": 0",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan READ_ONLY geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"GROEP\": 1,",
													"  \"CODE\": \"CODE\",",
													"  \"EXT_REF\": \"EXT_REF\",",
													"  \"OMSCHRIJVING\": \"OMSCHRIJVING\",",
													"  \"SORTEER_VOLGORDE\": 99,",
													"  \"READ_ONLY\": 2",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan READ_ONLY geen int 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"GROEP\": 1,",
													"  \"CODE\": \"CODE\",",
													"  \"EXT_REF\": \"EXT_REF\",",
													"  \"OMSCHRIJVING\": \"OMSCHRIJVING\",",
													"  \"SORTEER_VOLGORDE\": 99,",
													"  \"READ_ONLY\": \"ascii\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetObjects SQL injectie",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "64e90e05-c211-452c-acbb-f3f27f913751",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?VELDEN=* from ref_vliegtuigen; --",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "VELDEN",
													"value": "* from ref_vliegtuigen; --"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "DeleteObject ID is ascii",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "21f72e65-5e76-4bae-b63d-c77fdf6098bf",
												"exec": [
													"let nieuwID =  pm.environment.get(\"nieuwID\");",
													"console.log(\"DeleteObject id=\" + nieuwID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5fde7d49-65fa-4709-b00c-56ab7870faeb",
												"exec": [
													"let skipTest = pm.environment.get(\"skipTest\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/DeleteObject?ID=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"DeleteObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "ascii"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "27f9e921-f9bc-4c1f-8c27-2660546a271b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bd363d92-465d-4b49-9ee8-cc9756d431a4",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data missing 406",
							"item": [
								{
									"name": "GetObject zonder ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													"let nieuwTypesID = pm.environment.get(\"nieuwTypesID\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "DeleteObject zonder ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "21f72e65-5e76-4bae-b63d-c77fdf6098bf",
												"exec": [
													"let nieuwID =  pm.environment.get(\"nieuwID\");",
													"console.log(\"DeleteObject id=\" + nieuwID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5fde7d49-65fa-4709-b00c-56ab7870faeb",
												"exec": [
													"let skipTest = pm.environment.get(\"skipTest\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/DeleteObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"DeleteObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update record zonder ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"GROEP\": 1,",
													"  \"CODE\": \"CODE\",",
													"  \"EXT_REF\": \"EXT_REF\",",
													"  \"OMSCHRIJVING\": \"OMSCHRIJVING\",",
													"  \"SORTEER_VOLGORDE\": 99,",
													"  \"READ_ONLY\": 0",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan zonder data",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record geen GROEP",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"//  \"GROEP\": 1,",
													"  \"CODE\": \"CODE\",",
													"  \"EXT_REF\": \"EXT_REF\",",
													"  \"OMSCHRIJVING\": \"OMSCHRIJVING\",",
													"  \"SORTEER_VOLGORDE\": 99,",
													"  \"READ_ONLY\": 0",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record geen OMSCHRIJVING",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"GROEP\": 1,",
													"  \"CODE\": \"CODE\",",
													"  \"EXT_REF\": \"EXT_REF\",",
													"//  \"OMSCHRIJVING\": \"OMSCHRIJVING\",",
													"  \"SORTEER_VOLGORDE\": 99,",
													"  \"READ_ONLY\": 0",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "09e08933-f530-4685-8377-4d7e7a626393",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "75d66cec-853b-4818-b4e6-a5ed70208368",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 406\", function () {",
											"    pm.response.to.have.status(406);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data bestaat al 409",
							"item": [
								{
									"name": "Nieuw record opslaan Dubbel ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"ID\": 101,",
													"  \"CODE\": \"CODE\",",
													"  \"EXT_REF\": \"EXT_REF\",",
													"  \"OMSCHRIJVING\": \"OMSCHRIJVING\",",
													"  \"SORTEER_VOLGORDE\": 99,",
													"  \"READ_ONLY\": 0",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "19e4cc64-f1e3-4c0c-9163-d24077f409af",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "104a1ee5-e0c7-4ed3-adcc-de359caf1828",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data verwerking error 500",
							"item": [
								{
									"name": "GetObjects VELDEN, onbekend veld",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4e7e5c6d-7c0c-4936-b066-13cc5691aac5",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8614d038-d7e4-42ca-8db5-6beebe9f496a",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?MAX=2&VELDEN=ID, BESTAATNIET",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "MAX",
													"value": "2"
												},
												{
													"key": "VELDEN",
													"value": "ID, BESTAATNIET"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c5ddb210-9236-479a-bfa8-52a3dad9da42",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0dddcec8-d0b6-41de-b1d2-670b268ceabc",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "27071642-ff20-4d20-8308-cf53e1ca765a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "95765a89-34e8-49dc-ba2b-7b35a08a4690",
								"type": "text/javascript",
								"exec": [
									"console.log(pm.response.headers.get('X-Error-Message'));"
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "96fd5a23-6a98-417a-8c8f-53f7289cc108",
						"type": "text/javascript",
						"exec": [
							"console.log(\"-----> \" + pm.info.requestName);",
							"",
							"let onderdeel = \"Types\";",
							"pm.environment.set(\"onderdeel\", onderdeel);",
							"",
							"let url = pm.environment.get(\"base_url\") + \"/\" + onderdeel;",
							"pm.environment.set(\"url\", url);",
							"",
							"console.log(\"Url:\" + url);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "18a8c220-934b-44dc-a695-9d8aeb560aa6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Daginfo",
			"item": [
				{
					"name": "Create database",
					"item": [
						{
							"name": "Create table",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6d1b1dd9-bb57-4f6d-b3c0-c7e0de6edb69",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "26fa9841-8026-4f77-8df6-8cfdc5a42320",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{create_database_url}}?FILLDATA=true",
									"host": [
										"{{create_database_url}}"
									],
									"query": [
										{
											"key": "FILLDATA",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create view",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e150abf9-60f8-408a-9646-92d3e4d7ad9e",
										"exec": [
											"pm.test(\"Status code should not 500\", function () {",
											"    pm.response.to.not.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{create_view_url}}",
									"host": [
										"{{create_view_url}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5c884dab-aaa7-410f-a3cf-8baa3eb482dc",
								"type": "text/javascript",
								"exec": [
									"",
									"let aanmaken_database = pm.environment.get(\"create_database\");",
									"let aanmaken_views = pm.environment.get(\"create_views\");",
									"",
									"let onderdeel = pm.environment.get(\"onderdeel\");",
									"",
									"let base_url = pm.environment.get(\"base_url\");",
									"let url = pm.environment.get(\"url\");",
									"",
									"",
									"if (aanmaken_database === \"false\")",
									"{",
									"    console.log(\"Aanmaken \" + onderdeel + \" database overslaan\");",
									"    pm.environment.set(\"create_database_url\", base_url + \"/dummy.php\");",
									"}",
									"else",
									"{",
									"    pm.environment.set(\"create_database_url\", url + \"/CreateTable\");",
									"}",
									"",
									"if (aanmaken_views === \"false\")",
									"{",
									"    console.log(\"Aanmaken \" + onderdeel + \" database views overslaan\");",
									"    pm.environment.set(\"create_view_url\", base_url + \"/dummy.php\");",
									"}",
									"else",
									"{",
									"    pm.environment.set(\"create_view_url\", url + \"/CreateViews\");",
									"}"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2b3f7853-92aa-43e1-8f71-5c3b1eb393a3",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Basis get",
					"item": [
						{
							"name": "Alle velden",
							"item": [
								{
									"name": "GetObjects",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9482d8a-dafa-4427-b1be-a01f1e5157a0",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"// Data voor volgende testen",
													"let savedData = JSON.stringify(jsonData);",
													"pm.environment.set(\"savedData\", savedData);",
													"",
													"pm.environment.set(\"getObjectId\", jsonData.dataset[0].ID);",
													"pm.environment.set(\"getObjectDatum\", jsonData.dataset[0].DATUM);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9e2de65d-0b92-4fa3-9b85-ccac51d4f5b4",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects  Sorteer op ID ASC",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9482d8a-dafa-4427-b1be-a01f1e5157a0",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"// Data voor volgende testen",
													"let savedData = JSON.stringify(jsonData);",
													"pm.environment.set(\"savedData\", savedData);",
													"",
													"pm.environment.set(\"getObjectId\", jsonData.dataset[0].ID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9e2de65d-0b92-4fa3-9b85-ccac51d4f5b4",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?SORT=ID",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "SORT",
													"value": "ID"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects  Sorteer op ID DESC",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9482d8a-dafa-4427-b1be-a01f1e5157a0",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"pm.test(\"First record is last\", function () {",
													"",
													"    let lastID = jsonData.dataset[jsonData.dataset.length-1].ID",
													"    pm.expect(lastID).to.eql(pm.environment.get(\"getObjectId\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9e2de65d-0b92-4fa3-9b85-ccac51d4f5b4",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?SORT=ID DESC",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "SORT",
													"value": "ID DESC"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Max",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													"let savedData = JSON.parse(pm.environment.get(\"savedData\"));",
													"",
													"let jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"Aantal records == 2\", function () {",
													"    pm.expect(jsonData.dataset.length).to.eql(2);",
													"});",
													"",
													"pm.test(\"Totaal == orgineel\", function () {",
													"    pm.expect(jsonData.totaal).to.eql(savedData.totaal);",
													"});",
													"",
													"pm.test(\"LaatsteAanpassing == orgineel\", function () {",
													"    pm.expect(jsonData.laatste_aanpassing).to.eql(savedData.laatste_aanpassing);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?MAX=2",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "MAX",
													"value": "2"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "dc211dd2-0212-4bd9-9dc4-2a3361f46a38",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "90c899af-7ac7-4e30-9dd7-9f8ed5765a8f",
										"type": "text/javascript",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test('Heeft ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('ID');",
											"});",
											"",
											"pm.test('Heeft DATUM', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('DATUM');",
											"});",
											"",
											"pm.test('Heeft BAAN_ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('BAAN_ID');",
											"});",
											"",
											"pm.test('Heeft BEDRIJF_ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('BEDRIJF_ID');",
											"});",
											"",
											"pm.test('Heeft DDWV', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('DDWV');",
											"});",
											"",
											"pm.test('Heeft CLUB_BEDRIJF', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('CLUB_BEDRIJF');",
											"});",
											"",
											"pm.test('Heeft OPMERKINGEN', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('OPMERKINGEN');",
											"});",
											"",
											"pm.test('Heeft VLIEGBEDRIJF', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('VLIEGBEDRIJF');",
											"});",
											"",
											"pm.test('Heeft METEO', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('METEO');",
											"});",
											"",
											"pm.test('Heeft DIENSTEN', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('DIENSTEN');",
											"});",
											"",
											"pm.test('Heeft VERSLAG', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('VERSLAG');",
											"});",
											"",
											"pm.test('Heeft ROLLENDMATERIEEL', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('ROLLENDMATERIEEL');",
											"});",
											"",
											"pm.test('Heeft VLIEGENDMATERIEEL', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('VLIEGENDMATERIEEL');",
											"});",
											"",
											"pm.test('Heeft VERWIJDERD', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('VERWIJDERD');",
											"});",
											"",
											"pm.test('Heeft LAATSTE_AANPASSING', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('LAATSTE_AANPASSING');",
											"});",
											"",
											"pm.test('Heeft VELD_CODE', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('VELD_CODE');",
											"});",
											"",
											"pm.test('Heeft VELD_OMS', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('VELD_OMS');",
											"});",
											"",
											"pm.test('Heeft BAAN_CODE', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('BAAN_CODE');",
											"});",
											"",
											"pm.test('Heeft BAAN_OMS', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('BAAN_OMS');",
											"});",
											"",
											"pm.test('Heeft BEDRIJF_CODE', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('BEDRIJF_CODE');",
											"});",
											"",
											"pm.test('Heeft BEDRIJF_CODE', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('BEDRIJF_CODE');",
											"});",
											"",
											"pm.test('Heeft STARTMETHODE_CODE', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('STARTMETHODE_CODE');",
											"});",
											"",
											"pm.test('Heeft STARTMETHODE_OMS', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('STARTMETHODE_OMS');",
											"});",
											"",
											"",
											"pm.test(\"VERWIJDERD == 0\", function () {",
											"    var verwijderd = 0;",
											"    ",
											"    for (index = 0; index < jsonData.dataset.length; ++index) ",
											"    {",
											"        verwijderd += parseInt(jsonData.dataset[index].VERWIJDERD);   ",
											"    }",
											"    pm.expect(verwijderd).to.eql(0);",
											"    ",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "GetObjects VELDEN",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "64e90e05-c211-452c-acbb-f3f27f913751",
										"exec": [
											"let jsonData = pm.response.json();",
											"let savedData = JSON.parse(pm.environment.get(\"savedData\"));",
											"",
											"",
											"pm.test(\"Aantal velden == 2\", function () {",
											"    let velden = Object.keys(jsonData.dataset[0]).length;",
											"    pm.expect(velden).to.eql(2);",
											"});",
											"",
											"pm.test(\"Totaal == orgineel\", function () {",
											"    pm.expect(jsonData.totaal).to.eql(savedData.totaal);",
											"});",
											"",
											"pm.test(\"LaatsteAanpassing == orgineel\", function () {",
											"    pm.expect(jsonData.laatste_aanpassing).to.eql(savedData.laatste_aanpassing);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/GetObjects?MAX=2&VELDEN=ID, VELD_OMS",
									"host": [
										"{{url}}"
									],
									"path": [
										"GetObjects"
									],
									"query": [
										{
											"key": "MAX",
											"value": "2"
										},
										{
											"key": "VELDEN",
											"value": "ID, VELD_OMS"
										}
									]
								},
								"description": "Haal alle types op"
							},
							"response": []
						},
						{
							"name": "GetObjects LAASTE_AANPASSING",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "64e90e05-c211-452c-acbb-f3f27f913751",
										"exec": [
											"let jsonData = pm.response.json();",
											"let savedData = JSON.parse(pm.environment.get(\"savedData\"));",
											"",
											"pm.test(\"Dataset == null\", function () {",
											"    let velden = Object.keys([0]).length;",
											"    pm.expect(jsonData.dataset).to.eql(null);",
											"});",
											"",
											"pm.test(\"Totaal == orgineel\", function () {",
											"    pm.expect(jsonData.totaal).to.eql(savedData.totaal);",
											"});",
											"",
											"pm.test(\"LaatsteAanpassing == orgineel\", function () {",
											"    pm.expect(jsonData.laatste_aanpassing).to.eql(savedData.laatste_aanpassing);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/GetObjects?LAATSTE_AANPASSING=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"GetObjects"
									],
									"query": [
										{
											"key": "LAATSTE_AANPASSING",
											"value": "true"
										}
									]
								},
								"description": "Haal alle types op"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "52272bfe-6a3f-4b2a-9953-b55c706adb1a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ac9874c6-8a2e-4386-bd9d-cc0f618b6e8f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test('Heeft totaal', function() {",
									"  pm.expect(jsonData).to.have.property('totaal');",
									"});",
									"",
									"pm.test('Heeft laatste aanpassing', function() {",
									"  pm.expect(jsonData).to.have.property('laatste_aanpassing');",
									"});",
									"",
									"pm.test('Heeft dataset', function() {",
									"  pm.expect(jsonData).to.have.property('dataset');",
									"});"
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Modificatie",
					"item": [
						{
							"name": "Alle Velden",
							"item": [
								{
									"name": "SavObject",
									"item": [
										{
											"name": "Nieuw record opslaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
														"exec": [
															"",
															"let record = {",
															"    DATUM: \"2020-01-05\",",
															"    VELD_ID: \"901\",",
															"    BAAN_ID: \"109\",",
															"    BEDRIJF_ID: \"1550\",",
															"    DDWV: \"0\",",
															"    CLUB_BEDRIJF: \"1\"",
															"};",
															"",
															"let verleden = Math.floor(Math.random() * 5000);",
															"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
															"record.DATUM = d.toISOString().substring(0,10);",
															"",
															"var body = JSON.stringify(record); ",
															"pm.environment.set('request_body', body);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
														"exec": [
															"let skipTest = ((pm.response.code !== 200) || (pm.environment.get(\"skipTest\") === true));",
															"",
															"if (skipTest === false)",
															"{",
															"    let jsonData = pm.response.json();",
															"    ",
															"    pm.environment.set(\"nieuwID\", jsonData.ID);",
															"    console.log(\"nieuwID: \"+ jsonData.ID);",
															"}",
															"else",
															"{",
															"   pm.environment.set(\"nieuwID\", -1); ",
															"}"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{modify_database_url}}",
													"host": [
														"{{modify_database_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update record",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
														"exec": [
															"",
															"",
															"let record = {",
															"    ID: -1,",
															"    OPMERKINGEN: \"Zomerkamp dag 8\",                  ",
															"    VLIEGBEDRIJF: \"Het vliegbedrijf bevatte de volgende aspect(en), lier, sleep en zelfstart op de 22R met een rechterhand circuit. Halverwege de dag omgesteld naar 27C\",",
															"    METEO: \"Het zicht was > 10 km. De windrichting was 270 met  windkracht 3.4 - 5.42 m/s. Er was 2/8 bewolking. De wolkenbasis was 800 meter hoog.\",       ",
															"    DIENSTEN: \"Jan, Maartje, Mohammed aanwezig. Klaas had zich verslapen en kwam om 11:00\",  ",
															"    VERSLAG: \"Rustige dag met een klein ploegje mensen ondanks het prachtige weer. Omstellen ging zonder problemen, vliegende kisten konden blijven hangen\",",
															"    ROLLENDMATERIEEL:\"De motor van de lier wordt warm\",",
															"    VLIEGENDMATERIEEL: \"De E11 is in de werkplaats gezet ivm lekke band. Wordt maandag opgelost\"",
															"};",
															"",
															"record.ID =  pm.environment.get(\"nieuwID\");",
															"console.log(\"Update id=\" + record.ID);",
															"",
															"var body = JSON.stringify(record); ",
															"pm.environment.set('request_body', body);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{modify_database_url}}",
													"host": [
														"{{modify_database_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "2c5c4f90-abb2-4c6b-bdc7-940ef38d99c1",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "03c0ac8a-1e76-4514-9fbc-cbe17351d42d",
												"type": "text/javascript",
												"exec": [
													"",
													"let jsonData = null;",
													"let postData = null;",
													"let skipTest = ((pm.response.code !== 200) || (pm.environment.get(\"skipTest\") === true));",
													"",
													"if (skipTest === false)",
													"{",
													"    postData = JSON.parse(pm.environment.get('request_body'));",
													"    jsonData = pm.response.json();",
													"}",
													"",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"ID\", function () {",
													"    if (postData.hasOwnProperty('ID'))",
													"    pm.expect(jsonData.ID.toString()).to.eql(postData.ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"DATUM\", function () {",
													"    if (postData.hasOwnProperty('DATUM'))",
													"    pm.expect(jsonData.DATUM.toString()).to.eql(postData.DATUM.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"BAAN_ID\", function () {",
													"    if (postData.hasOwnProperty('BAAN_ID'))",
													"    pm.expect(jsonData.BAAN_ID.toString()).to.eql(postData.BAAN_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"BEDRIJF_ID\", function () {",
													"    if (postData.hasOwnProperty('BEDRIJF_ID'))",
													"    pm.expect(jsonData.BEDRIJF_ID.toString()).to.eql(postData.BEDRIJF_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"DDWV\", function () {",
													"    if (postData.hasOwnProperty('DDWV'))",
													"    pm.expect(jsonData.DDWV.toString()).to.eql(postData.DDWV.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"CLUB_BEDRIJF\", function () {",
													"    if (postData.hasOwnProperty('CLUB_BEDRIJF'))",
													"    pm.expect(jsonData.CLUB_BEDRIJF.toString()).to.eql(postData.CLUB_BEDRIJF.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"OPMERKINGEN\", function () {",
													"    if (postData.hasOwnProperty('OPMERKINGEN'))",
													"    pm.expect(jsonData.OPMERKINGEN.toString()).to.eql(postData.OPMERKINGEN.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"VLIEGBEDRIJF\", function () {",
													"    if (postData.hasOwnProperty('VLIEGBEDRIJF'))",
													"    pm.expect(jsonData.VLIEGBEDRIJF.toString()).to.eql(postData.VLIEGBEDRIJF.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"METEO\", function () {",
													"    if (postData.hasOwnProperty('METEO'))",
													"    pm.expect(jsonData.METEO.toString()).to.eql(postData.METEO.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"AA\", function () {",
													"    if (postData.hasOwnProperty('AA'))",
													"    pm.expect(jsonData.AA.toString()).to.eql(postData.AA.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"DIENSTEN\", function () {",
													"    if (postData.hasOwnProperty('DIENSTEN'))",
													"    pm.expect(jsonData.DIENSTEN.toString()).to.eql(postData.DIENSTEN.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"VERSLAG\", function () {",
													"    if (postData.hasOwnProperty('VERSLAG'))",
													"    pm.expect(jsonData.VERSLAG.toString()).to.eql(postData.VERSLAG.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"ROLLENDMATERIEEL\", function () {",
													"    if (postData.hasOwnProperty('ROLLENDMATERIEEL'))",
													"    pm.expect(jsonData.ROLLENDMATERIEEL.toString()).to.eql(postData.ROLLENDMATERIEEL.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"VLIEGENDMATERIEEL\", function () {",
													"    if (postData.hasOwnProperty('VLIEGENDMATERIEEL'))",
													"    pm.expect(jsonData.VLIEGENDMATERIEEL.toString()).to.eql(postData.VLIEGENDMATERIEEL.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"VERWIJDERD\", function () {",
													"    pm.expect(jsonData.VERWIJDERD.toString()).to.eql('0');",
													"});"
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "GetObject by ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													"",
													"let getObjectId =  pm.environment.get(\"getObjectId\");",
													"console.log(\"GetObject id=\" + getObjectId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject?ID={{getObjectId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "{{getObjectId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GetObject by DATUM",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													"",
													"let getObjectDatum =  pm.environment.get(\"getObjectDatum\");",
													"console.log(\"GetObject datum=\" + getObjectDatum);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject?DATUM={{getObjectDatum}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											],
											"query": [
												{
													"key": "DATUM",
													"value": "{{getObjectDatum}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "17b676fc-063c-4f1a-8c42-f636d29774b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f5bab96b-eb48-4ee0-b35d-0b32478f8e0e",
										"type": "text/javascript",
										"exec": [
											"// 200 Succesvol",
											"// 409 Kan record niet opslaan vanwege duplicatie",
											"pm.test(\"Status code is 200 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,409]);",
											"});",
											"",
											"let jsonData = null;",
											"let skipTest = false;",
											"",
											"if (pm.request.method === 'GET')",
											"    skipTest = false;",
											"else",
											"    skipTest = ((pm.response.code !== 200) || (pm.environment.get(\"skipTest\") === true));",
											"",
											"if (pm.responsecode === 409)",
											"    console.log(pm.response.headers.get('X-Error-Message'));",
											"",
											"if (skipTest === false)",
											"    jsonData = pm.response.json();",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft ID', function() {",
											"  pm.expect(jsonData).to.have.property('ID');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft DATUM', function() {",
											"  pm.expect(jsonData).to.have.property('DATUM');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft BAAN_ID', function() {",
											"  pm.expect(jsonData).to.have.property('BAAN_ID');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft BEDRIJF_ID', function() {",
											"  pm.expect(jsonData).to.have.property('BEDRIJF_ID');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft DDWV', function() {",
											"  pm.expect(jsonData).to.have.property('DDWV');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft CLUB_BEDRIJF', function() {",
											"  pm.expect(jsonData).to.have.property('CLUB_BEDRIJF');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft VLIEGBEDRIJF', function() {",
											"  pm.expect(jsonData).to.have.property('VLIEGBEDRIJF');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft METEO', function() {",
											"  pm.expect(jsonData).to.have.property('METEO');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft DIENSTEN', function() {",
											"  pm.expect(jsonData).to.have.property('DIENSTEN');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft VERSLAG', function() {",
											"  pm.expect(jsonData).to.have.property('VERSLAG');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft ROLLENDMATERIEEL', function() {",
											"  pm.expect(jsonData).to.have.property('ROLLENDMATERIEEL');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft VLIEGENDMATERIEEL', function() {",
											"  pm.expect(jsonData).to.have.property('VLIEGENDMATERIEEL');",
											"});",
											"",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft VERWIJDERD', function() {",
											"  pm.expect(jsonData).to.have.property('VERWIJDERD');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft LAATSTE_AANPASSING', function() {",
											"  pm.expect(jsonData).to.have.property('LAATSTE_AANPASSING');",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "DeleteObject",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "21f72e65-5e76-4bae-b63d-c77fdf6098bf",
										"exec": [
											"let nieuwID =  pm.environment.get(\"nieuwID\");",
											"console.log(\"DeleteObject id=\" + nieuwID);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5fde7d49-65fa-4709-b00c-56ab7870faeb",
										"exec": [
											"let skipTest = pm.environment.get(\"skipTest\");",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{delete_database_url}}?ID={{nieuwID}}",
									"host": [
										"{{delete_database_url}}"
									],
									"query": [
										{
											"key": "ID",
											"value": "{{nieuwID}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "bc0d7385-33b4-4631-acfd-bca14a71d49f",
								"type": "text/javascript",
								"exec": [
									"",
									"let modify_database = pm.environment.get(\"modify_database\");",
									"",
									"let onderdeel = pm.environment.get(\"onderdeel\");",
									"",
									"let base_url = pm.environment.get(\"base_url\");",
									"let url = pm.environment.get(\"url\");",
									"",
									"",
									"if (modify_database === \"false\")",
									"{",
									"    console.log(\"Modificatie \" + onderdeel + \" overslaan\");",
									"    pm.environment.set(\"modify_database_url\", base_url + \"/dummy.php\");",
									"    pm.environment.set(\"delete_database_url\", base_url + \"/dummy.php\");",
									"    pm.environment.set(\"skipTest\", true);",
									"}",
									"else",
									"{",
									"    pm.environment.set(\"modify_database_url\", url + \"/SaveObject\");",
									"    pm.environment.set(\"delete_database_url\", url + \"/DeleteObject\");",
									"    pm.environment.set(\"skipTest\", false);",
									"}",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f1dbb867-ff10-432f-952f-85a0fc184493",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Error",
					"item": [
						{
							"name": "Data missing 404",
							"item": [
								{
									"name": "GetObject geen data",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject?ID=-1",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "-1"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "09e08933-f530-4685-8377-4d7e7a626393",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "75d66cec-853b-4818-b4e6-a5ed70208368",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data validatie error 405",
							"item": [
								{
									"name": "GetObjects LAASTE_AANPASSING geen bool",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "64e90e05-c211-452c-acbb-f3f27f913751",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?LAATSTE_AANPASSING=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "LAATSTE_AANPASSING",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObject met verkeerd ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject?ID=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "ascii"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GetObjects Max geen int",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?MAX=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "MAX",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Start geen int",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?START=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "START",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Start < 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?START=-1",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "START",
													"value": "-1"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    ID: \"ascii\",",
													"    DATUM: \"2020-01-05\",",
													"    VELD_ID: \"901\",",
													"    BAAN_ID: \"109\",",
													"    BEDRIJF_ID: \"1550\",",
													"    DDWV: \"0\",",
													"    CLUB_BEDRIJF: \"1\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan VELD_ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    DATUM: \"2000-01-05\",",
													"    VELD_ID: \"AA\",",
													"    BAAN_ID: \"109\",",
													"    BEDRIJF_ID: \"1550\",",
													"    DDWV: \"0\",",
													"    CLUB_BEDRIJF: \"1\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan BAAN_ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    DATUM: \"2000-01-05\",",
													"    VELD_ID: \"100\",",
													"    BAAN_ID: \"10o\",",
													"    BEDRIJF_ID: \"1550\",",
													"    DDWV: \"0\",",
													"    CLUB_BEDRIJF: \"1\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan BEDRIJF_ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    DATUM: \"2000-01-05\",",
													"    VELD_ID: \"100\",",
													"    BAAN_ID: \"10\",",
													"    BEDRIJF_ID: \"ZZZZ\",",
													"    DDWV: \"0\",",
													"    CLUB_BEDRIJF: \"1\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan STARTMETHODE_ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    DATUM: \"2000-01-05\",",
													"    VELD_ID: \"100\",",
													"    BAAN_ID: \"10\",",
													"    BEDRIJF_ID: \"1\",",
													"    STARTMETHODE_ID: \"II\",",
													"    DDWV: \"0\",",
													"    CLUB_BEDRIJF: \"1\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan SOORTBEDRIJF_ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    DATUM: \"2000-01-05\",",
													"    VELD_ID: \"100\",",
													"    BAAN_ID: \"10\",",
													"    BEDRIJF_ID: \"1\",",
													"    SOORTBEDRIJF_ID: \"*****\",",
													"    DDWV: \"0\",",
													"    CLUB_BEDRIJF: \"1\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan DATUM verkeerde datum",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    DATUM: \"2020-02-30\",",
													"    VELD_ID: \"901\",",
													"    BAAN_ID: \"109\",",
													"    BEDRIJF_ID: \"1550\",",
													"    DDWV: \"0\",",
													"    CLUB_BEDRIJF: \"1\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan DATUM onjuist formaat",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    DATUM: \"ascii\",",
													"    VELD_ID: \"901\",",
													"    BAAN_ID: \"109\",",
													"    BEDRIJF_ID: \"1550\",",
													"    DDWV: \"0\",",
													"    CLUB_BEDRIJF: \"1\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan DATUM onjuist formaat 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    DATUM: \"2020-1-01\",",
													"    VELD_ID: \"901\",",
													"    BAAN_ID: \"109\",",
													"    BEDRIJF_ID: \"1550\",",
													"    DDWV: \"0\",",
													"    CLUB_BEDRIJF: \"1\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetObjects SQL injectie",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "64e90e05-c211-452c-acbb-f3f27f913751",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?VELDEN=* from ref_vliegtuigen; --",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "VELDEN",
													"value": "* from ref_vliegtuigen; --"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "DeleteObject ID is ascii",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "21f72e65-5e76-4bae-b63d-c77fdf6098bf",
												"exec": [
													"let nieuwID =  pm.environment.get(\"nieuwID\");",
													"console.log(\"DeleteObject id=\" + nieuwID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5fde7d49-65fa-4709-b00c-56ab7870faeb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/DeleteObject?ID=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"DeleteObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "ascii"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "27f9e921-f9bc-4c1f-8c27-2660546a271b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bd363d92-465d-4b49-9ee8-cc9756d431a4",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data missing 406",
							"item": [
								{
									"name": "GetObject zonder ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													"let nieuwTypesID = pm.environment.get(\"nieuwTypesID\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "DeleteObject zonder ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "21f72e65-5e76-4bae-b63d-c77fdf6098bf",
												"exec": [
													"let nieuwID =  pm.environment.get(\"nieuwID\");",
													"console.log(\"DeleteObject id=\" + nieuwID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5fde7d49-65fa-4709-b00c-56ab7870faeb",
												"exec": [
													"let skipTest = pm.environment.get(\"skipTest\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/DeleteObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"DeleteObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update record geen ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    DATUM: \"2020-01-05\",",
													"    VELD_ID: \"901\",",
													"    BAAN_ID: \"109\",",
													"    BEDRIJF_ID: \"1550\",",
													"    DDWV: \"0\",",
													"    CLUB_BEDRIJF: \"1\"",
													"};",
													"",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record geen DATUM",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"//    DATUM: \"2020-01-05\",",
													"    VELD_ID: \"901\",",
													"    BAAN_ID: \"109\",",
													"    BEDRIJF_ID: \"1550\",",
													"    DDWV: \"0\",",
													"    CLUB_BEDRIJF: \"1\"",
													"};",
													"",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan zonder data",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "09e08933-f530-4685-8377-4d7e7a626393",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "75d66cec-853b-4818-b4e6-a5ed70208368",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 406\", function () {",
											"    pm.response.to.have.status(406);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data verwerking error 500",
							"item": [
								{
									"name": "GetObjects VELDEN, onbekend veld",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4e7e5c6d-7c0c-4936-b066-13cc5691aac5",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8614d038-d7e4-42ca-8db5-6beebe9f496a",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?MAX=2&VELDEN=ID, BESTAATNIET",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "MAX",
													"value": "2"
												},
												{
													"key": "VELDEN",
													"value": "ID, BESTAATNIET"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c5ddb210-9236-479a-bfa8-52a3dad9da42",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0dddcec8-d0b6-41de-b1d2-670b268ceabc",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data bestaat al 409",
							"item": [
								{
									"name": "Nieuw record dubbele datum",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record = {",
													"    DATUM: \"1999-01-01\",",
													"    VELD_ID: \"901\",",
													"    BAAN_ID: \"109\",",
													"    BEDRIJF_ID: \"1550\",",
													"    DDWV: \"0\",",
													"    CLUB_BEDRIJF: \"1\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record dubbel ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record = {",
													"    ID: \"1\",",
													"    DATUM: \"2009-01-01\",",
													"    VELD_ID: \"901\",",
													"    BAAN_ID: \"109\",",
													"    BEDRIJF_ID: \"1550\",",
													"    DDWV: \"0\",",
													"    CLUB_BEDRIJF: \"1\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c07fa53c-f808-4e32-82b1-9261a4875b35",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "394eb291-7175-4af6-9394-801fc5af9d37",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "27071642-ff20-4d20-8308-cf53e1ca765a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "95765a89-34e8-49dc-ba2b-7b35a08a4690",
								"type": "text/javascript",
								"exec": [
									"console.log(pm.response.headers.get('X-Error-Message'));"
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "96fd5a23-6a98-417a-8c8f-53f7289cc108",
						"type": "text/javascript",
						"exec": [
							"console.log(\"-----> \" + pm.info.requestName);",
							"",
							"let onderdeel = \"Daginfo\";",
							"pm.environment.set(\"onderdeel\", onderdeel);",
							"",
							"let url = pm.environment.get(\"base_url\") + \"/\" + onderdeel;",
							"pm.environment.set(\"url\", url);",
							"",
							"console.log(\"Url:\" + url);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "18a8c220-934b-44dc-a695-9d8aeb560aa6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Vliegtuigen",
			"item": [
				{
					"name": "Create database",
					"item": [
						{
							"name": "Create table",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{create_database_url}}?FILLDATA=true",
									"host": [
										"{{create_database_url}}"
									],
									"query": [
										{
											"key": "FILLDATA",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create view",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "013d33a4-2d60-4915-bde2-373817329b4d",
										"exec": [
											"pm.test(\"Status code should not 500\", function () {",
											"    pm.response.to.not.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{create_view_url}}",
									"host": [
										"{{create_view_url}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8ee34ee9-fb57-4caf-bf39-bdc5381278ea",
								"type": "text/javascript",
								"exec": [
									"let aanmaken_database = pm.environment.get(\"create_database\");",
									"let aanmaken_views = pm.environment.get(\"create_views\");",
									"",
									"let onderdeel = pm.environment.get(\"onderdeel\");",
									"",
									"let base_url = pm.environment.get(\"base_url\");",
									"let url = pm.environment.get(\"url\");",
									"",
									"",
									"if (aanmaken_database === \"false\")",
									"{",
									"    console.log(\"Aanmaken \" + onderdeel + \" database overslaan\");",
									"    pm.environment.set(\"create_database_url\", base_url + \"/dummy.php\");",
									"}",
									"else",
									"{",
									"    pm.environment.set(\"create_database_url\", url + \"/CreateTable\");",
									"}",
									"",
									"if (aanmaken_views === \"false\")",
									"{",
									"    console.log(\"Aanmaken \" + onderdeel + \" database views overslaan\");",
									"    pm.environment.set(\"create_view_url\", base_url + \"/dummy.php\");",
									"}",
									"else",
									"{",
									"    pm.environment.set(\"create_view_url\", url + \"/CreateViews\");",
									"}"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e8c69014-2e14-45a9-9450-e1122e64ac2b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Basis get",
					"item": [
						{
							"name": "Alle velden",
							"item": [
								{
									"name": "GetObjects",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "97d862fb-3c0f-42bf-b966-5f00871872b7",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"// Data voor volgende testen",
													"let savedData = JSON.stringify(jsonData);",
													"pm.environment.set(\"savedData\", savedData);",
													"",
													"pm.environment.set(\"getObjectId\", jsonData.dataset[0].ID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8acb9f61-c1bd-4bde-af58-30e958d76916",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects  Sorteer op ID ASC",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "97d862fb-3c0f-42bf-b966-5f00871872b7",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"// Data voor volgende testen",
													"let savedData = JSON.stringify(jsonData);",
													"pm.environment.set(\"savedData\", savedData);",
													"",
													"pm.environment.set(\"getObjectId\", jsonData.dataset[0].ID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "8acb9f61-c1bd-4bde-af58-30e958d76916",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?SORT=ID",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "SORT",
													"value": "ID"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects  Sorteer op ID DESC",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9482d8a-dafa-4427-b1be-a01f1e5157a0",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"pm.test(\"First record is last\", function () {",
													"",
													"    let lastID = jsonData.dataset[jsonData.dataset.length-1].ID",
													"    pm.expect(lastID).to.eql(pm.environment.get(\"getObjectId\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9e2de65d-0b92-4fa3-9b85-ccac51d4f5b4",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?SORT=ID DESC",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "SORT",
													"value": "ID DESC"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Max",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													"let savedData = JSON.parse(pm.environment.get(\"savedData\"));",
													"",
													"let jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"Aantal records == 2\", function () {",
													"    pm.expect(jsonData.dataset.length).to.eql(2);",
													"});",
													"",
													"pm.test(\"Totaal == orgineel\", function () {",
													"    pm.expect(jsonData.totaal).to.eql(savedData.totaal);",
													"});",
													"",
													"pm.test(\"LaatsteAanpassing == orgineel\", function () {",
													"    pm.expect(jsonData.laatste_aanpassing).to.eql(savedData.laatste_aanpassing);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?MAX=2",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "MAX",
													"value": "2"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Clubkisten",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"pm.test(\"CLUBKIST == 1\", function () {",
													"    var fout = 0;",
													"    ",
													"    for (index = 0; index < jsonData.dataset.length; ++index) ",
													"    {",
													"        if (parseInt(jsonData.dataset[index].CLUBKIST) !== 1)",
													"            fout = 1;",
													"    }",
													"    pm.expect(fout).to.eql(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/GetObjects?CLUBKIST=true",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "CLUBKIST",
													"value": "true"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects ID 212,214",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"pm.test(\"ID == 212,214\", function () {",
													"    var fout = 0;",
													"    ",
													"    for (index = 0; index < jsonData.dataset.length; ++index) ",
													"    {",
													"        if ((parseInt(jsonData.dataset[index].ID) !== 212) && (parseInt(jsonData.dataset[index].ID) !== 214))",
													"            fout = 1;",
													"    }",
													"    pm.expect(fout).to.eql(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"url": {
											"raw": "{{url}}/GetObjects?IN=212,214",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "IN",
													"value": "212,214"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects ZITPLAATSEN",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"pm.test(\"ZITPLAATSEN == 2\", function () {",
													"    var fout = 0;",
													"    ",
													"    for (index = 0; index < jsonData.dataset.length; ++index) ",
													"    {",
													"        if (parseInt(jsonData.dataset[index].ZITPLAATSEN) !== 2)",
													"            fout = 1;",
													"    }",
													"    pm.expect(fout).to.eql(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/GetObjects?ZITPLAATSEN=2",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "ZITPLAATSEN",
													"value": "2"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects SELECTIE",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"url": {
											"raw": "{{url}}/GetObjects?SELECTIE=PH-1",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "SELECTIE",
													"value": "PH-1"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "Sleepkist",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"pm.test(\"SLEEPKIST == 1\", function () {",
													"    var fout = 0;",
													"    ",
													"    for (index = 0; index < jsonData.dataset.length; ++index) ",
													"    {",
													"        if (parseInt(jsonData.dataset[index].SLEEPKIST) !== 1)",
													"            fout = 1;",
													"    }",
													"    pm.expect(fout).to.eql(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"url": {
											"raw": "{{url}}/GetObjects?SLEEPKIST=true",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "SLEEPKIST",
													"value": "true"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "dc211dd2-0212-4bd9-9dc4-2a3361f46a38",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "90c899af-7ac7-4e30-9dd7-9f8ed5765a8f",
										"type": "text/javascript",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test('Heeft ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('ID');",
											"});",
											"",
											"pm.test('Heeft REGISTRATIE', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('REGISTRATIE');",
											"});",
											"",
											"pm.test('Heeft CALLSIGN', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('CALLSIGN');",
											"});",
											"",
											"pm.test('Heeft FLARMCODE', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('FLARMCODE');",
											"});",
											"",
											"pm.test('Heeft ZITPLAATSEN', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('ZITPLAATSEN');",
											"});",
											"",
											"pm.test('Heeft ZELFSTART', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('ZELFSTART');",
											"});",
											"",
											"pm.test('Heeft CLUBKIST', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('CLUBKIST');",
											"});",
											"",
											"pm.test('Heeft TMG', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('TMG');",
											"});",
											"",
											"pm.test('Heeft SLEEPKIST', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('SLEEPKIST');",
											"});",
											"",
											"pm.test('Heeft TYPE_ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('TYPE_ID');",
											"});",
											"",
											"pm.test('Heeft VOLGORDE', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('VOLGORDE');",
											"});",
											"",
											"pm.test('Heeft VERWIJDERD', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('VERWIJDERD');",
											"});",
											"",
											"pm.test('Heeft LAATSTE_AANPASSING', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('LAATSTE_AANPASSING');",
											"});",
											"",
											"pm.test('Heeft VLIEGTUIGTYPE', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('VLIEGTUIGTYPE');",
											"});",
											"",
											"pm.test('Heeft REGCALL', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('REGCALL');",
											"});",
											"",
											"pm.test(\"VERWIJDERD == 0\", function () {",
											"    var verwijderd = 0;",
											"    ",
											"    for (index = 0; index < jsonData.dataset.length; ++index) ",
											"    {",
											"        verwijderd += parseInt(jsonData.dataset[index].VERWIJDERD);   ",
											"    }",
											"    pm.expect(verwijderd).to.eql(0);",
											"    ",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "GetObjects TMG",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Aantal records == totaal\", function () {",
											"    let aantal = parseInt(jsonData.totaal);",
											"    ",
											"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
											"});",
											"",
											"pm.test(\"TMG == 1\", function () {",
											"    var fout = 0;",
											"    ",
											"    for (index = 0; index < jsonData.dataset.length; ++index) ",
											"    {",
											"        if (parseInt(jsonData.dataset[index].TMG) !== 1)",
											"            fout = 1;",
											"    }",
											"    pm.expect(fout).to.eql(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/GetObjects?TMG=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"GetObjects"
									],
									"query": [
										{
											"key": "TMG",
											"value": "true"
										}
									]
								},
								"description": "Haal alle types op"
							},
							"response": []
						},
						{
							"name": "GetObjects Types",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Aantal records == totaal\", function () {",
											"    let aantal = parseInt(jsonData.totaal);",
											"    ",
											"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
											"});",
											"",
											"pm.test(\"Aantal == 2\", function () {",
											"    let aantal = parseInt(jsonData.totaal);",
											"    ",
											"    pm.expect(aantal).to.eql(2);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/GetObjects?TYPES= 404, 405",
									"host": [
										"{{url}}"
									],
									"path": [
										"GetObjects"
									],
									"query": [
										{
											"key": "TYPES",
											"value": " 404, 405"
										}
									]
								},
								"description": "Haal alle types op"
							},
							"response": []
						},
						{
							"name": "GetObjects IN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"Aantal records == totaal\", function () {",
											"    let aantal = parseInt(jsonData.totaal);",
											"    ",
											"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
											"});",
											"",
											"pm.test(\"Aantal == 2\", function () {",
											"    let aantal = parseInt(jsonData.totaal);",
											"    ",
											"    pm.expect(aantal).to.eql(2);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"url": {
									"raw": "{{url}}/GetObjects?IN=200,201",
									"host": [
										"{{url}}"
									],
									"path": [
										"GetObjects"
									],
									"query": [
										{
											"key": "IN",
											"value": "200,201"
										}
									]
								},
								"description": "Haal alle types op"
							},
							"response": []
						},
						{
							"name": "GetObjects VELDEN",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "64e90e05-c211-452c-acbb-f3f27f913751",
										"exec": [
											"let jsonData = pm.response.json();",
											"let savedData = JSON.parse(pm.environment.get(\"savedData\"));",
											"",
											"",
											"pm.test(\"Aantal velden == 2\", function () {",
											"    let velden = Object.keys(jsonData.dataset[0]).length;",
											"    pm.expect(velden).to.eql(2);",
											"});",
											"",
											"pm.test(\"Totaal == orgineel\", function () {",
											"    pm.expect(jsonData.totaal).to.eql(savedData.totaal);",
											"});",
											"",
											"pm.test(\"LaatsteAanpassing == orgineel\", function () {",
											"    pm.expect(jsonData.laatste_aanpassing).to.eql(savedData.laatste_aanpassing);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/GetObjects?MAX=2&VELDEN=ID,REGISTRATIE",
									"host": [
										"{{url}}"
									],
									"path": [
										"GetObjects"
									],
									"query": [
										{
											"key": "MAX",
											"value": "2"
										},
										{
											"key": "VELDEN",
											"value": "ID,REGISTRATIE"
										}
									]
								},
								"description": "Haal alle types op"
							},
							"response": []
						},
						{
							"name": "GetObjects LAASTE_AANPASSING",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "64e90e05-c211-452c-acbb-f3f27f913751",
										"exec": [
											"let jsonData = pm.response.json();",
											"let savedData = JSON.parse(pm.environment.get(\"savedData\"));",
											"",
											"",
											"pm.test(\"Dataset == null\", function () {",
											"    let velden = Object.keys([0]).length;",
											"    pm.expect(jsonData.dataset).to.eql(null);",
											"});",
											"",
											"pm.test(\"Totaal == orgineel\", function () {",
											"    pm.expect(jsonData.totaal).to.eql(savedData.totaal);",
											"});",
											"",
											"pm.test(\"LaatsteAanpassing == orgineel\", function () {",
											"    pm.expect(jsonData.laatste_aanpassing).to.eql(savedData.laatste_aanpassing);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/GetObjects?LAATSTE_AANPASSING=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"GetObjects"
									],
									"query": [
										{
											"key": "LAATSTE_AANPASSING",
											"value": "true"
										}
									]
								},
								"description": "Haal alle types op"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "52272bfe-6a3f-4b2a-9953-b55c706adb1a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ac9874c6-8a2e-4386-bd9d-cc0f618b6e8f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test('Heeft totaal', function() {",
									"  pm.expect(jsonData).to.have.property('totaal');",
									"});",
									"",
									"pm.test('Heeft laatste aanpassing', function() {",
									"  pm.expect(jsonData).to.have.property('laatste_aanpassing');",
									"});",
									"",
									"pm.test('Heeft dataset', function() {",
									"  pm.expect(jsonData).to.have.property('dataset');",
									"});"
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Modificatie",
					"item": [
						{
							"name": "Alle Velden",
							"item": [
								{
									"name": "SaveObject",
									"item": [
										{
											"name": "Nieuw record opslaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
														"exec": [
															"",
															"let record = {",
															"  \"REGISTRATIE\": \"ZZ-ZZ\",",
															"  \"CALLSIGN\": \"ZZ\",",
															"  \"FLARMCODE\": \"AB12CD\",",
															"  \"ZITPLAATSEN\": 2,",
															"  \"CLUBKIST\": 1,",
															"  \"VOLGORDE\": 99",
															"};",
															"",
															"var body = JSON.stringify(record); ",
															"pm.environment.set('request_body', body);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
														"exec": [
															"",
															"let skipTest = ((pm.response.code !== 200) || (pm.environment.get(\"skipTest\") === true));",
															"",
															"if (skipTest === false)",
															"{",
															"    let jsonData = pm.response.json();",
															"    pm.environment.set(\"nieuwID\", jsonData.ID);",
															"    console.log(\"nieuwID: \"+ jsonData.ID);",
															"}",
															"else",
															"{",
															"   pm.environment.set(\"nieuwID\", -1); ",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{modify_database_url}}",
													"host": [
														"{{modify_database_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update record",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
														"exec": [
															"",
															"let record = {",
															"  \"REGISTRATIE\": \"AA-AA\",",
															"  \"CALLSIGN\": \"AA\",",
															"  \"FLARMCODE\": \"A11111\",",
															"  \"ZITPLAATSEN\": 1,",
															"  \"TMG\": 1,",
															"  \"ZELFSTART\": 1,",
															"  \"SLEEPKIST\": 1,    ",
															"  \"CLUBKIST\": 0,",
															"  \"VOLGORDE\": 1",
															"};",
															"record.ID =  pm.environment.get(\"nieuwID\");",
															"console.log(\"Update id=\" + record.ID);",
															"",
															"var body = JSON.stringify(record); ",
															"pm.environment.set('request_body', body);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{modify_database_url}}",
													"host": [
														"{{modify_database_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "31426eac-9e4c-4046-b45f-07e7c79a9c82",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f6a99264-e86a-4981-8477-ba6d233935a9",
												"type": "text/javascript",
												"exec": [
													"",
													"let jsonData = null;",
													"let postData = null;",
													"let skipTest = ((pm.response.code !== 200) || (pm.environment.get(\"skipTest\") === true));",
													"",
													"if (skipTest === false)",
													"{",
													"    postData = JSON.parse(pm.environment.get('request_body'));",
													"    jsonData = pm.response.json();",
													"}",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"ID\", function () {",
													"    if (postData.hasOwnProperty('ID'))",
													"    pm.expect(jsonData.ID.toString()).to.eql(postData.ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"REGISTRATIE\", function () {",
													"    if (postData.hasOwnProperty('REGISTRATIE'))",
													"        pm.expect(jsonData.REGISTRATIE.toString()).to.eql(postData.REGISTRATIE.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"CALLSIGN\", function () {",
													"    if (postData.hasOwnProperty('CALLSIGN'))",
													"        pm.expect(jsonData.CALLSIGN.toString()).to.eql(postData.CALLSIGN.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"FLARMCODE\", function () {",
													"    if (postData.hasOwnProperty('FLARMCODE'))",
													"        pm.expect(jsonData.FLARMCODE.toString()).to.eql(postData.FLARMCODE.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"ZITPLAATSEN\", function () {",
													"    if (postData.hasOwnProperty('ZITPLAATSEN'))",
													"        pm.expect(jsonData.ZITPLAATSEN.toString()).to.eql(postData.ZITPLAATSEN.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"CLUBKIST\", function () {",
													"    if (postData.hasOwnProperty('CLUBKIST'))",
													"        pm.expect(jsonData.CLUBKIST.toString()).to.eql(postData.CLUBKIST.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"VOLGORDE\", function () {",
													"    if (postData.hasOwnProperty('VOLGORDE'))",
													"        pm.expect(jsonData.VOLGORDE.toString()).to.eql(postData.VOLGORDE.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"VERWIJDERD\", function () {",
													"    pm.expect(jsonData.VERWIJDERD.toString()).to.eql('0');",
													"});",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "GetObject",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													"let getObjectId =  pm.environment.get(\"getObjectId\");",
													"console.log(\"GetObject id=\" + getObjectId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject?ID={{getObjectId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "{{getObjectId}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "17b676fc-063c-4f1a-8c42-f636d29774b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f5bab96b-eb48-4ee0-b35d-0b32478f8e0e",
										"type": "text/javascript",
										"exec": [
											"// 200 Succesvol",
											"// 409 Kan record niet opslaan vanwege duplicatie",
											"pm.test(\"Status code is 200 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,409]);",
											"});",
											"",
											"let jsonData = null;",
											"let skipTest = false;",
											"",
											"if (pm.request.method === 'GET')",
											"    skipTest = false;",
											"else",
											"    skipTest = ((pm.response.code !== 200) || (pm.environment.get(\"skipTest\") === true));",
											"",
											"if (pm.responsecode === 409)",
											"    console.log(pm.response.headers.get('X-Error-Message'));",
											"",
											"if (skipTest === false)",
											"    jsonData = pm.response.json();",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft ID', function() {",
											"  pm.expect(jsonData).to.have.property('ID');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft REGISTRATIE', function() {",
											"  pm.expect(jsonData).to.have.property('REGISTRATIE');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft CALLSIGN', function() {",
											"  pm.expect(jsonData).to.have.property('CALLSIGN');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft FLARMCODE', function() {",
											"  pm.expect(jsonData).to.have.property('FLARMCODE');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft ZITPLAATSEN', function() {",
											"  pm.expect(jsonData).to.have.property('ZITPLAATSEN');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft ZELFSTART', function() {",
											"  pm.expect(jsonData).to.have.property('ZELFSTART');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft CLUBKIST', function() {",
											"  pm.expect(jsonData).to.have.property('CLUBKIST');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft TMG', function() {",
											"  pm.expect(jsonData).to.have.property('TMG');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft SLEEPKIST', function() {",
											"  pm.expect(jsonData).to.have.property('SLEEPKIST');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft TYPE_ID', function() {",
											"  pm.expect(jsonData).to.have.property('TYPE_ID');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft VOLGORDE', function() {",
											"  pm.expect(jsonData).to.have.property('VOLGORDE');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft VERWIJDERD', function() {",
											"  pm.expect(jsonData).to.have.property('VERWIJDERD');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft LAATSTE_AANPASSING', function() {",
											"  pm.expect(jsonData).to.have.property('LAATSTE_AANPASSING');",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "DeleteObject",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "21f72e65-5e76-4bae-b63d-c77fdf6098bf",
										"exec": [
											"let nieuwID =  pm.environment.get(\"nieuwID\");",
											"console.log(\"DeleteObject id=\" + nieuwID);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5fde7d49-65fa-4709-b00c-56ab7870faeb",
										"exec": [
											"let skipTest = pm.environment.get(\"skipTest\");",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{delete_database_url}}?ID={{nieuwID}}",
									"host": [
										"{{delete_database_url}}"
									],
									"query": [
										{
											"key": "ID",
											"value": "{{nieuwID}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "85b14512-eeea-40d2-844b-2ae6bb36a784",
								"type": "text/javascript",
								"exec": [
									"",
									"let modify_database = pm.environment.get(\"modify_database\");",
									"",
									"let onderdeel = pm.environment.get(\"onderdeel\");",
									"",
									"let base_url = pm.environment.get(\"base_url\");",
									"let url = pm.environment.get(\"url\");",
									"",
									"",
									"if (modify_database === \"false\")",
									"{",
									"    console.log(\"Modificatie \" + onderdeel + \" overslaan\");",
									"    pm.environment.set(\"modify_database_url\", base_url + \"/dummy.php\");",
									"    pm.environment.set(\"delete_database_url\", base_url + \"/dummy.php\");",
									"    pm.environment.set(\"skipTest\", true);",
									"}",
									"else",
									"{",
									"    pm.environment.set(\"modify_database_url\", url + \"/SaveObject\");",
									"    pm.environment.set(\"delete_database_url\", url + \"/DeleteObject\");",
									"    pm.environment.set(\"skipTest\", false);",
									"}"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1e349f39-6a5e-484e-958d-328f752f97a7",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Error",
					"item": [
						{
							"name": "Data missing 404",
							"item": [
								{
									"name": "GetObject geen data",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													"",
													"let getObjectId =  pm.environment.get(\"getObjectId\");",
													"console.log(\"GetObject id=\" + getObjectId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject?ID=-1",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "-1"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "09e08933-f530-4685-8377-4d7e7a626393",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "75d66cec-853b-4818-b4e6-a5ed70208368",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data validatie error 405",
							"item": [
								{
									"name": "GetObjects LAASTE_AANPASSING geen bool",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "64e90e05-c211-452c-acbb-f3f27f913751",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?LAATSTE_AANPASSING=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "LAATSTE_AANPASSING",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObject met verkeerd ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject?ID=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "ascii"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GetObjects IN geen int",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"url": {
											"raw": "{{url}}/GetObjects?TYPES=200,ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "TYPES",
													"value": "200,ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Max geen int",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?MAX=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "MAX",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects IN geen int",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?IN=214,ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "IN",
													"value": "214,ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects TMG ascii",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?TMG=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "TMG",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects SLEEPKIST ascii",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?SLEEPKIST=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "SLEEPKIST",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects ZITPLAATSEN ascii",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?ZITPLAATSEN=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "ZITPLAATSEN",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects ZITPLAATSEN 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?ZITPLAATSEN=3",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "ZITPLAATSEN",
													"value": "3"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Start geen int",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?START=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "START",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Start < 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?START=-1",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "START",
													"value": "-1"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"ID\": \"AAA\",",
													"  \"REGISTRATIE\": \"PH-1234\",",
													"  \"CALLSIGN\": \"AA\",",
													"  \"FLARMCODE\": 123456,",
													"  \"ZITPLAATSEN\": 1,",
													"  \"ZELFSTART\": 0,",
													"  \"CLUBKIST\": 1,",
													"  \"TMG\": 0,",
													"  \"SLEEPKIST\": 0,",
													"  \"TYPE_ID\": 12,",
													"  \"VOLGORDE\": 12,",
													"  \"VERWIJDERD\": 0,",
													"  \"LAATSTE_AANPASSING\": {}",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan TMG geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"REGISTRATIE\": \"PH-1234\",",
													"  \"CALLSIGN\": \"AA\",",
													"  \"FLARMCODE\": 123456,",
													"  \"ZITPLAATSEN\": 1,",
													"  \"ZELFSTART\": 0,",
													"  \"CLUBKIST\": 1,",
													"  \"TMG\": \"AA\",",
													"  \"SLEEPKIST\": 0,",
													"  \"TYPE_ID\": 12,",
													"  \"VOLGORDE\": 12,",
													"  \"VERWIJDERD\": 0,",
													"  \"LAATSTE_AANPASSING\": {}",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan TMG geen bool",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"REGISTRATIE\": \"PH-1234\",",
													"  \"CALLSIGN\": \"AA\",",
													"  \"FLARMCODE\": 123456,",
													"  \"ZITPLAATSEN\": 1,",
													"  \"ZELFSTART\": 0,",
													"  \"CLUBKIST\": 1,",
													"  \"TMG\": 5,",
													"  \"SLEEPKIST\": 0,",
													"  \"TYPE_ID\": 12,",
													"  \"VOLGORDE\": 12,",
													"  \"VERWIJDERD\": 0,",
													"  \"LAATSTE_AANPASSING\": {}",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan CLUBKIST geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"REGISTRATIE\": \"PH-1234\",",
													"  \"CALLSIGN\": \"AA\",",
													"  \"FLARMCODE\": 123456,",
													"  \"ZITPLAATSEN\": 1,",
													"  \"ZELFSTART\": 0,",
													"  \"CLUBKIST\": \"AA\",",
													"  \"TMG\": 0,",
													"  \"SLEEPKIST\": 0,",
													"  \"TYPE_ID\": 12,",
													"  \"VOLGORDE\": 12,",
													"  \"VERWIJDERD\": 0,",
													"  \"LAATSTE_AANPASSING\": {}",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan CLUBKIST geen bool",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"REGISTRATIE\": \"PH-1234\",",
													"  \"CALLSIGN\": \"AA\",",
													"  \"FLARMCODE\": 123456,",
													"  \"ZITPLAATSEN\": 1,",
													"  \"ZELFSTART\": 0,",
													"  \"CLUBKIST\": 5,",
													"  \"TMG\": 0,",
													"  \"SLEEPKIST\": 0,",
													"  \"TYPE_ID\": 12,",
													"  \"VOLGORDE\": 12,",
													"  \"VERWIJDERD\": 0,",
													"  \"LAATSTE_AANPASSING\": {}",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan SLEEPKIST geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"REGISTRATIE\": \"PH-1234\",",
													"  \"CALLSIGN\": \"AA\",",
													"  \"FLARMCODE\": 123456,",
													"  \"ZITPLAATSEN\": 1,",
													"  \"ZELFSTART\": 0,",
													"  \"CLUBKIST\": 1,",
													"  \"TMG\": 0,",
													"  \"SLEEPKIST\": \"AA\",",
													"  \"TYPE_ID\": 12,",
													"  \"VOLGORDE\": 12,",
													"  \"VERWIJDERD\": 0,",
													"  \"LAATSTE_AANPASSING\": {}",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan SLEEPKIST geen bool",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"REGISTRATIE\": \"PH-1234\",",
													"  \"CALLSIGN\": \"AA\",",
													"  \"FLARMCODE\": 123456,",
													"  \"ZITPLAATSEN\": 1,",
													"  \"ZELFSTART\": 0,",
													"  \"CLUBKIST\": 1,",
													"  \"TMG\": 0,",
													"  \"SLEEPKIST\": 5,",
													"  \"TYPE_ID\": 12,",
													"  \"VOLGORDE\": 12,",
													"  \"VERWIJDERD\": 0,",
													"  \"LAATSTE_AANPASSING\": {}",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan ZITPLAATSEN geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"REGISTRATIE\": \"PH-1234\",",
													"  \"CALLSIGN\": \"AA\",",
													"  \"FLARMCODE\": 123456,",
													"  \"ZITPLAATSEN\": \"AA\",",
													"  \"ZELFSTART\": 0,",
													"  \"CLUBKIST\": 1,",
													"  \"TMG\": 0,",
													"  \"SLEEPKIST\": 0,",
													"  \"TYPE_ID\": 12,",
													"  \"VOLGORDE\": 12,",
													"  \"VERWIJDERD\": 0,",
													"  \"LAATSTE_AANPASSING\": {}",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan ZITPLAATSEN geen 1 of 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"REGISTRATIE\": \"PH-1234\",",
													"  \"CALLSIGN\": \"AA\",",
													"  \"FLARMCODE\": 123456,",
													"  \"ZITPLAATSEN\": 3,",
													"  \"ZELFSTART\": 0,",
													"  \"CLUBKIST\": 1,",
													"  \"TMG\": 0,",
													"  \"SLEEPKIST\": 0,",
													"  \"TYPE_ID\": 12,",
													"  \"VOLGORDE\": 12,",
													"  \"VERWIJDERD\": 0,",
													"  \"LAATSTE_AANPASSING\": {}",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetObjects SQL injectie",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "64e90e05-c211-452c-acbb-f3f27f913751",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?VELDEN=* from ref_vliegtuigen; --",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "VELDEN",
													"value": "* from ref_vliegtuigen; --"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "DeleteObject ID is ascii",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "21f72e65-5e76-4bae-b63d-c77fdf6098bf",
												"exec": [
													"let nieuwID =  pm.environment.get(\"nieuwID\");",
													"console.log(\"DeleteObject id=\" + nieuwID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5fde7d49-65fa-4709-b00c-56ab7870faeb",
												"exec": [
													"let skipTest = pm.environment.get(\"skipTest\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/DeleteObject?ID=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"DeleteObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "ascii"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "27f9e921-f9bc-4c1f-8c27-2660546a271b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bd363d92-465d-4b49-9ee8-cc9756d431a4",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data missing 406",
							"item": [
								{
									"name": "GetObject zonder ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													"let nieuwTypesID = pm.environment.get(\"nieuwTypesID\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "DeleteObject zonder ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "21f72e65-5e76-4bae-b63d-c77fdf6098bf",
												"exec": [
													"let nieuwID =  pm.environment.get(\"nieuwID\");",
													"console.log(\"DeleteObject id=\" + nieuwID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5fde7d49-65fa-4709-b00c-56ab7870faeb",
												"exec": [
													"let skipTest = pm.environment.get(\"skipTest\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/DeleteObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"DeleteObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan zonder data",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record geen REGISTRATIE",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"//  \"REGISTRATIE\": \"ZZ-ZZ\",",
													"  \"CALLSIGN\": \"ZZ\",",
													"  \"FLARMCODE\": \"AB12CD\",",
													"  \"ZITPLAATSEN\": 2,",
													"  \"CLUBKIST\": 1,",
													"  \"VOLGORDE\": 99",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update record geen ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"REGISTRATIE\": \"ZZ-ZZ\",",
													"  \"CALLSIGN\": \"ZZ\",",
													"  \"FLARMCODE\": \"AB12CD\",",
													"  \"ZITPLAATSEN\": 2,",
													"  \"CLUBKIST\": 1,",
													"  \"VOLGORDE\": 99",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3a187130-b9e8-4e26-ac7c-5399e99e3ed4",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "27d43471-4bd7-4ab5-be6a-1ab00a6fdb5a",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 406\", function () {",
											"    pm.response.to.have.status(406);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data verwerking error 500",
							"item": [
								{
									"name": "GetObjects VELDEN, onbekend veld",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "64e90e05-c211-452c-acbb-f3f27f913751",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?MAX=2&VELDEN=ID, BESTAATNIET",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "MAX",
													"value": "2"
												},
												{
													"key": "VELDEN",
													"value": "ID, BESTAATNIET"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c5ddb210-9236-479a-bfa8-52a3dad9da42",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0dddcec8-d0b6-41de-b1d2-670b268ceabc",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data bestaat al 409",
							"item": [
								{
									"name": "Nieuw record Dubbele registratie",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"REGISTRATIE\": \"PH-1529\",",
													"  \"CALLSIGN\": \"ZZ\",",
													"  \"FLARMCODE\": \"AB12CD\",",
													"  \"ZITPLAATSEN\": 2,",
													"  \"CLUBKIST\": 1,",
													"  \"VOLGORDE\": 99",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record Dubbel ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"ID\": \"200\",",
													"  \"REGISTRATIE\": \"ZZ-ZZ\",",
													"  \"CALLSIGN\": \"ZZ\",",
													"  \"FLARMCODE\": \"AB12CD\",",
													"  \"ZITPLAATSEN\": 2,",
													"  \"CLUBKIST\": 1,",
													"  \"VOLGORDE\": 99",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "27071642-ff20-4d20-8308-cf53e1ca765a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "95765a89-34e8-49dc-ba2b-7b35a08a4690",
								"type": "text/javascript",
								"exec": [
									"console.log(pm.response.headers.get('X-Error-Message'));"
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "29b276b6-b71e-4a38-8eb6-5c19e2efdddd",
						"type": "text/javascript",
						"exec": [
							"console.log(\"-----> \" + pm.info.requestName);",
							"",
							"let onderdeel = \"Vliegtuigen\";",
							"pm.environment.set(\"onderdeel\", onderdeel);",
							"",
							"let url = pm.environment.get(\"base_url\") + \"/\" + onderdeel;",
							"pm.environment.set(\"url\", url);",
							"",
							"console.log(\"Url:\" + url);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d742e042-5361-48e8-af97-6144f08b79ec",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Leden",
			"item": [
				{
					"name": "Create database",
					"item": [
						{
							"name": "Create table",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{create_database_url}}?FILLDATA=true",
									"host": [
										"{{create_database_url}}"
									],
									"query": [
										{
											"key": "FILLDATA",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create view",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c600ec59-6312-43bb-8dab-37c9c3d9851c",
										"exec": [
											"pm.test(\"Status code should not 500\", function () {",
											"    pm.response.to.not.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{create_view_url}}",
									"host": [
										"{{create_view_url}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4be058f5-b317-41e6-bd60-a9ac9edacc8d",
								"type": "text/javascript",
								"exec": [
									"let aanmaken_database = pm.environment.get(\"create_database\");",
									"let aanmaken_views = pm.environment.get(\"create_views\");",
									"",
									"let onderdeel = pm.environment.get(\"onderdeel\");",
									"",
									"let base_url = pm.environment.get(\"base_url\");",
									"let url = pm.environment.get(\"url\");",
									"",
									"",
									"if (aanmaken_database === \"false\")",
									"{",
									"    console.log(\"Aanmaken \" + onderdeel + \" database overslaan\");",
									"    pm.environment.set(\"create_database_url\", base_url + \"/dummy.php\");",
									"}",
									"else",
									"{",
									"    pm.environment.set(\"create_database_url\", url + \"/CreateTable\");",
									"}",
									"",
									"if (aanmaken_views === \"false\")",
									"{",
									"    console.log(\"Aanmaken \" + onderdeel + \" database views overslaan\");",
									"    pm.environment.set(\"create_view_url\", base_url + \"/dummy.php\");",
									"}",
									"else",
									"{",
									"    pm.environment.set(\"create_view_url\", url + \"/CreateViews\");",
									"}"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "cadd9189-661c-4b16-bdb0-f98dfea3192f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Basis get",
					"item": [
						{
							"name": "Alle velden",
							"item": [
								{
									"name": "GetObjects",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1ba88146-3f9d-4585-91e8-b0d67c958cd0",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"// Data voor volgende testen",
													"let savedData = JSON.stringify(jsonData);",
													"pm.environment.set(\"savedData\", savedData);",
													"",
													"pm.environment.set(\"getObjectId\", jsonData.dataset[0].ID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "aeb109f6-7bf7-4f9b-98c8-66d82fc88692",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects  Sorteer op ID ASC",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1ba88146-3f9d-4585-91e8-b0d67c958cd0",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"// Data voor volgende testen",
													"let savedData = JSON.stringify(jsonData);",
													"pm.environment.set(\"savedData\", savedData);",
													"",
													"pm.environment.set(\"getObjectId\", jsonData.dataset[0].ID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "aeb109f6-7bf7-4f9b-98c8-66d82fc88692",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?SORT=ID",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "SORT",
													"value": "ID"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects  Sorteer op ID DESC",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9482d8a-dafa-4427-b1be-a01f1e5157a0",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"pm.test(\"First record is last\", function () {",
													"",
													"    let lastID = jsonData.dataset[jsonData.dataset.length-1].ID",
													"    pm.expect(lastID).to.eql(pm.environment.get(\"getObjectId\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9e2de65d-0b92-4fa3-9b85-ccac51d4f5b4",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?SORT=ID DESC",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "SORT",
													"value": "ID DESC"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Max",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													"let savedData = JSON.parse(pm.environment.get(\"savedData\"));",
													"",
													"let jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"Aantal records == 2\", function () {",
													"    pm.expect(jsonData.dataset.length).to.eql(2);",
													"});",
													"",
													"pm.test(\"Totaal == orgineel\", function () {",
													"    pm.expect(jsonData.totaal).to.eql(savedData.totaal);",
													"});",
													"",
													"pm.test(\"LaatsteAanpassing == orgineel\", function () {",
													"    pm.expect(jsonData.laatste_aanpassing).to.eql(savedData.laatste_aanpassing);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?MAX=2",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "MAX",
													"value": "2"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Jeugleden / Ereleden",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													"let jsonData = pm.response.json();",
													"let lidtypes = pm.environment.get(\"lidtypes\");",
													"",
													"",
													"pm.test(\"Aantal records == 2\", function () {",
													"    pm.expect(jsonData.dataset.length).to.eql(3);",
													"});",
													"",
													"pm.test(\"Totaal == orgineel\", function () {",
													"    pm.expect(jsonData.totaal).to.eql(\"3\");",
													"});",
													"",
													"pm.test(\"LIDTYPE == 1\", function () {",
													"    var fout = 0;",
													"    ",
													"    for (index = 0; index < jsonData.dataset.length; ++index) ",
													"    {",
													"        if (lidtypes.includes(jsonData.dataset[index].LIDTYPE_ID) === false)",
													"            fout = 1;",
													"    }",
													"    pm.expect(fout).to.eql(0);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													"pm.environment.set(\"lidtypes\", \"601,603\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"url": {
											"raw": "{{url}}/GetObjects?TYPES={{lidtypes}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "TYPES",
													"value": "{{lidtypes}}"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "dc211dd2-0212-4bd9-9dc4-2a3361f46a38",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "90c899af-7ac7-4e30-9dd7-9f8ed5765a8f",
										"type": "text/javascript",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test('Heeft ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('ID');",
											"});",
											"",
											"pm.test('Heeft NAAM', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('NAAM');",
											"});",
											"",
											"pm.test('Heeft VOORNAAM', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('VOORNAAM');",
											"});",
											"",
											"pm.test('Heeft ACHTERNAAM', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('ACHTERNAAM');",
											"});",
											"",
											"pm.test('Heeft TELEFOON', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('TELEFOON');",
											"});",
											"",
											"pm.test('Heeft MOBIEL', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('MOBIEL');",
											"});",
											"",
											"pm.test('Heeft NOODNUMMER', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('NOODNUMMER');",
											"});",
											"",
											"pm.test('Heeft EMAIL', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('EMAIL');",
											"});",
											"",
											"pm.test('Heeft LIDNR', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('LIDNR');",
											"});",
											"",
											"pm.test('Heeft LIDTYPE_ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('LIDTYPE_ID');",
											"});",
											"",
											"pm.test('Heeft LIERIST', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('LIERIST');",
											"});",
											"",
											"pm.test('Heeft STARTLEIDER', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('STARTLEIDER');",
											"});",
											"",
											"pm.test('Heeft INSTRUCTEUR', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('INSTRUCTEUR');",
											"});",
											"",
											"pm.test('Heeft INLOGNAAM', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('INLOGNAAM');",
											"});",
											"",
											"pm.test('Heeft WACHTWOORD', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('WACHTWOORD');",
											"});",
											"",
											"pm.test('Heeft HEEFT_BETAALD', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('HEEFT_BETAALD');",
											"});",
											"",
											"pm.test('Heeft LIERIST', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('LIERIST');",
											"});",
											"",
											"pm.test('Heeft VERWIJDERD', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('VERWIJDERD');",
											"});",
											"",
											"pm.test('Heeft LAATSTE_AANPASSING', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('LAATSTE_AANPASSING');",
											"});",
											"",
											"pm.test('Heeft LIDTYPE', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('LIDTYPE');",
											"});",
											"",
											"pm.test(\"VERWIJDERD == 0\", function () {",
											"    var verwijderd = 0;",
											"    ",
											"    for (index = 0; index < jsonData.dataset.length; ++index) ",
											"    {",
											"        verwijderd += parseInt(jsonData.dataset[index].VERWIJDERD);   ",
											"    }",
											"    pm.expect(verwijderd).to.eql(0);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "GetObjects VELDEN",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "64e90e05-c211-452c-acbb-f3f27f913751",
										"exec": [
											"let jsonData = pm.response.json();",
											"let savedData = JSON.parse(pm.environment.get(\"savedData\"));",
											"",
											"",
											"pm.test(\"Aantal velden == 2\", function () {",
											"    let velden = Object.keys(jsonData.dataset[0]).length;",
											"    pm.expect(velden).to.eql(2);",
											"});",
											"",
											"pm.test(\"Totaal == orgineel\", function () {",
											"    pm.expect(jsonData.totaal).to.eql(savedData.totaal);",
											"});",
											"",
											"pm.test(\"LaatsteAanpassing == orgineel\", function () {",
											"    pm.expect(jsonData.laatste_aanpassing).to.eql(savedData.laatste_aanpassing);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/GetObjects?MAX=2&VELDEN=ID,NAAM",
									"host": [
										"{{url}}"
									],
									"path": [
										"GetObjects"
									],
									"query": [
										{
											"key": "MAX",
											"value": "2"
										},
										{
											"key": "VELDEN",
											"value": "ID,NAAM"
										}
									]
								},
								"description": "Haal alle types op"
							},
							"response": []
						},
						{
							"name": "GetObjects LAASTE_AANPASSING",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "64e90e05-c211-452c-acbb-f3f27f913751",
										"exec": [
											"let jsonData = pm.response.json();",
											"let savedData = JSON.parse(pm.environment.get(\"savedData\"));",
											"",
											"",
											"pm.test(\"Dataset == null\", function () {",
											"    let velden = Object.keys([0]).length;",
											"    pm.expect(jsonData.dataset).to.eql(null);",
											"});",
											"",
											"pm.test(\"Totaal == orgineel\", function () {",
											"    pm.expect(jsonData.totaal).to.eql(savedData.totaal);",
											"});",
											"",
											"pm.test(\"LaatsteAanpassing == orgineel\", function () {",
											"    pm.expect(jsonData.laatste_aanpassing).to.eql(savedData.laatste_aanpassing);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/GetObjects?LAATSTE_AANPASSING=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"GetObjects"
									],
									"query": [
										{
											"key": "LAATSTE_AANPASSING",
											"value": "true"
										}
									]
								},
								"description": "Haal alle types op"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "52272bfe-6a3f-4b2a-9953-b55c706adb1a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ac9874c6-8a2e-4386-bd9d-cc0f618b6e8f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test('Heeft totaal', function() {",
									"  pm.expect(jsonData).to.have.property('totaal');",
									"});",
									"",
									"pm.test('Heeft laatste aanpassing', function() {",
									"  pm.expect(jsonData).to.have.property('laatste_aanpassing');",
									"});",
									"",
									"pm.test('Heeft dataset', function() {",
									"  pm.expect(jsonData).to.have.property('dataset');",
									"});"
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Modificatie",
					"item": [
						{
							"name": "Alle Velden",
							"item": [
								{
									"name": "SaveObject",
									"item": [
										{
											"name": "Nieuw record opslaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
														"exec": [
															"",
															"let record = {",
															"  \"NAAM\": \"Jodokus de Marmot\",",
															"  \"VOORNAAM\": \"Jodokus\",",
															"  \"ACHTERNAAM\": \"Marmot\",",
															"  \"LIDNR\": \"10101\",",
															"  \"LIDTYPE_ID\": 601,",
															"  \"EMAIL\": \"Jodokus@fabeltje.nl\",",
															"  \"MOBIEL\": \"06-5223311\",",
															"  \"NOODNUMMER\": \"112\"",
															"};",
															"",
															"var body = JSON.stringify(record); ",
															"pm.environment.set('request_body', body);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
														"exec": [
															"",
															"let skipTest = ((pm.response.code !== 200) || (pm.environment.get(\"skipTest\") === true));",
															"",
															"if (skipTest === false)",
															"{",
															"    let jsonData = pm.response.json();",
															"    pm.environment.set(\"nieuwID\", jsonData.ID);",
															"    console.log(\"nieuwID: \"+ jsonData.ID);",
															"}",
															"else",
															"{",
															"   pm.environment.set(\"nieuwID\", -1); ",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{modify_database_url}}",
													"host": [
														"{{modify_database_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update record",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
														"exec": [
															"",
															"let record = {",
															"  \"NAAM\": \"Chico Lama\",",
															"  \"VOORNAAM\": \"Chico\",",
															"  \"ACHTERNAAM\": \"Lama\",",
															"  \"LIDNR\": \"20222\",",
															"  \"LIDTYPE_ID\": 603,",
															"  \"EMAIL\": \"lama@fabeltje.nl\",",
															"  \"MOBIEL\": \"00-9113377\",",
															"  \"NOODNUMMER\": \"211\",",
															"  \"LIERIST\": 1,",
															"  \"STARTLEIDER\": 1,",
															"  \"INSTRUCTEUR\": 1,",
															"  \"INLOGNAAM\": \"chicochico\",",
															"  \"WACHTWOORD\": \"geheim\",",
															"  \"HEEFT_BETAALD\": 1",
															"};",
															"",
															"record.ID =  pm.environment.get(\"nieuwID\");",
															"console.log(\"Update id=\" + record.ID);",
															"",
															"var body = JSON.stringify(record); ",
															"pm.environment.set('request_body', body);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{modify_database_url}}",
													"host": [
														"{{modify_database_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8a0ba2f5-04f1-4324-bb31-2e6ad7c068e4",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3b6ab46e-bda3-49b0-a5f7-e4e06531efa0",
												"type": "text/javascript",
												"exec": [
													"",
													"let jsonData = null;",
													"let postData = null;",
													"let skipTest = ((pm.response.code !== 200) || (pm.environment.get(\"skipTest\") === true));",
													"",
													"if (skipTest === false)",
													"{",
													"    postData = JSON.parse(pm.environment.get('request_body'));",
													"    jsonData = pm.response.json();",
													"}",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"ID\", function () {",
													"    if (postData.hasOwnProperty('ID'))",
													"    pm.expect(jsonData.ID.toString()).to.eql(postData.ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"NAAM\", function () {",
													"    if (postData.hasOwnProperty('NAAM'))",
													"        pm.expect(jsonData.NAAM.toString()).to.eql(postData.NAAM.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"VOORNAAM\", function () {",
													"    if (postData.hasOwnProperty('VOORNAAM'))",
													"        pm.expect(jsonData.VOORNAAM.toString()).to.eql(postData.VOORNAAM.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"ACHTERNAAM\", function () {",
													"    if (postData.hasOwnProperty('ACHTERNAAM'))",
													"        pm.expect(jsonData.ACHTERNAAM.toString()).to.eql(postData.ACHTERNAAM.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"LIDNR\", function () {",
													"    if (postData.hasOwnProperty('LIDNR'))",
													"        pm.expect(jsonData.LIDNR.toString()).to.eql(postData.LIDNR.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"LIDTYPE_ID\", function () {",
													"    if (postData.hasOwnProperty('LIDTYPE_ID'))",
													"        pm.expect(jsonData.LIDTYPE_ID.toString()).to.eql(postData.LIDTYPE_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"EMAIL\", function () {",
													"    if (postData.hasOwnProperty('EMAIL'))",
													"        pm.expect(jsonData.EMAIL.toString()).to.eql(postData.EMAIL.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"MOBIEL\", function () {",
													"    if (postData.hasOwnProperty('MOBIEL'))",
													"        pm.expect(jsonData.MOBIEL.toString()).to.eql(postData.MOBIEL.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"NOODNUMMER\", function () {",
													"    if (postData.hasOwnProperty('NOODNUMMER'))",
													"        pm.expect(jsonData.NOODNUMMER.toString()).to.eql(postData.NOODNUMMER.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"LIERIST\", function () {",
													"    if (postData.hasOwnProperty('LIERIST'))",
													"        pm.expect(jsonData.LIERIST.toString()).to.eql(postData.LIERIST.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"STARTLEIDER\", function () {",
													"    if (postData.hasOwnProperty('STARTLEIDER'))",
													"        pm.expect(jsonData.STARTLEIDER.toString()).to.eql(postData.STARTLEIDER.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"INSTRUCTEUR\", function () {",
													"    if (postData.hasOwnProperty('INSTRUCTEUR'))",
													"        pm.expect(jsonData.INSTRUCTEUR.toString()).to.eql(postData.INSTRUCTEUR.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"INLOGNAAM\", function () {",
													"    if (postData.hasOwnProperty('INLOGNAAM'))",
													"        pm.expect(jsonData.INLOGNAAM.toString()).to.eql(postData.INLOGNAAM.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"WACHTWOORD\", function () {",
													"    if (postData.hasOwnProperty('WACHTWOORD'))",
													"        pm.expect(jsonData.WACHTWOORD.toString()).to.eql(postData.WACHTWOORD.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"HEEFT_BETAALD\", function () {",
													"    if (postData.hasOwnProperty('HEEFT_BETAALD'))",
													"        pm.expect(jsonData.HEEFT_BETAALD.toString()).to.eql(postData.HEEFT_BETAALD.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"VERWIJDERD\", function () {",
													"    pm.expect(jsonData.VERWIJDERD.toString()).to.eql('0');",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "GetObject",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													"let getObjectId =  pm.environment.get(\"getObjectId\");",
													"console.log(\"GetObject id=\" + getObjectId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject?ID={{getObjectId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "{{getObjectId}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "17b676fc-063c-4f1a-8c42-f636d29774b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f5bab96b-eb48-4ee0-b35d-0b32478f8e0e",
										"type": "text/javascript",
										"exec": [
											"// 200 Succesvol",
											"// 409 Kan record niet opslaan vanwege duplicatie",
											"pm.test(\"Status code is 200 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,409]);",
											"});",
											"",
											"let jsonData = null;",
											"let skipTest = false;",
											"",
											"if (pm.request.method === 'GET')",
											"    skipTest = false;",
											"else",
											"    skipTest = ((pm.response.code !== 200) || (pm.environment.get(\"skipTest\") === true));",
											"",
											"if (pm.responsecode === 409)",
											"    console.log(pm.response.headers.get('X-Error-Message'));",
											"",
											"if (skipTest === false)",
											"    jsonData = pm.response.json();",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft ID', function() {",
											"  pm.expect(jsonData).to.have.property('ID');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft NAAM', function() {",
											"  pm.expect(jsonData).to.have.property('NAAM');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft VOORNAAM', function() {",
											"  pm.expect(jsonData).to.have.property('VOORNAAM');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft ACHTERNAAM', function() {",
											"  pm.expect(jsonData).to.have.property('ACHTERNAAM');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft TELEFOON', function() {",
											"  pm.expect(jsonData).to.have.property('TELEFOON');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft MOBIEL', function() {",
											"  pm.expect(jsonData).to.have.property('MOBIEL');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft NOODNUMMER', function() {",
											"  pm.expect(jsonData).to.have.property('NOODNUMMER');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft EMAIL', function() {",
											"  pm.expect(jsonData).to.have.property('EMAIL');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft LIDNR', function() {",
											"  pm.expect(jsonData).to.have.property('LIDNR');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft LIDTYPE_ID', function() {",
											"  pm.expect(jsonData).to.have.property('LIDTYPE_ID');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft LIERIST', function() {",
											"  pm.expect(jsonData).to.have.property('LIERIST');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft STARTLEIDER', function() {",
											"  pm.expect(jsonData).to.have.property('STARTLEIDER');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft INSTRUCTEUR', function() {",
											"  pm.expect(jsonData).to.have.property('INSTRUCTEUR');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft INLOGNAAM', function() {",
											"  pm.expect(jsonData).to.have.property('INLOGNAAM');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft WACHTWOORD', function() {",
											"  pm.expect(jsonData).to.have.property('WACHTWOORD');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft HEEFT_BETAALD', function() {",
											"  pm.expect(jsonData).to.have.property('HEEFT_BETAALD');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft LIERIST', function() {",
											"  pm.expect(jsonData).to.have.property('LIERIST');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft VERWIJDERD', function() {",
											"  pm.expect(jsonData).to.have.property('VERWIJDERD');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft LAATSTE_AANPASSING', function() {",
											"  pm.expect(jsonData).to.have.property('LAATSTE_AANPASSING');",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "DeleteObject",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "21f72e65-5e76-4bae-b63d-c77fdf6098bf",
										"exec": [
											"let nieuwID =  pm.environment.get(\"nieuwID\");",
											"console.log(\"DeleteObject id=\" + nieuwID);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5fde7d49-65fa-4709-b00c-56ab7870faeb",
										"exec": [
											"let skipTest = pm.environment.get(\"skipTest\");",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{delete_database_url}}?ID={{nieuwID}}",
									"host": [
										"{{delete_database_url}}"
									],
									"query": [
										{
											"key": "ID",
											"value": "{{nieuwID}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "69f40b13-5972-44fb-a002-df9d63c6bab4",
								"type": "text/javascript",
								"exec": [
									"",
									"let modify_database = pm.environment.get(\"modify_database\");",
									"",
									"let onderdeel = pm.environment.get(\"onderdeel\");",
									"",
									"let base_url = pm.environment.get(\"base_url\");",
									"let url = pm.environment.get(\"url\");",
									"",
									"",
									"if (modify_database === \"false\")",
									"{",
									"    console.log(\"Modificatie \" + onderdeel + \" overslaan\");",
									"    pm.environment.set(\"modify_database_url\", base_url + \"/dummy.php\");",
									"    pm.environment.set(\"delete_database_url\", base_url + \"/dummy.php\");",
									"    pm.environment.set(\"skipTest\", true);",
									"}",
									"else",
									"{",
									"    pm.environment.set(\"modify_database_url\", url + \"/SaveObject\");",
									"    pm.environment.set(\"delete_database_url\", url + \"/DeleteObject\");",
									"    pm.environment.set(\"skipTest\", false);",
									"}"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "84bee5c6-0551-4f3f-9888-c29e56856d3a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Error",
					"item": [
						{
							"name": "Data missing 404",
							"item": [
								{
									"name": "GetObject geen data",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													"",
													"let getObjectId =  pm.environment.get(\"getObjectId\");",
													"console.log(\"GetObject id=\" + getObjectId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject?ID=-1",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "-1"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "09e08933-f530-4685-8377-4d7e7a626393",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "75d66cec-853b-4818-b4e6-a5ed70208368",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data validatie error 405",
							"item": [
								{
									"name": "GetObjects LAASTE_AANPASSING geen bool",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "64e90e05-c211-452c-acbb-f3f27f913751",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?LAATSTE_AANPASSING=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "LAATSTE_AANPASSING",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObject met verkeerd ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject?ID=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "ascii"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GetObjects Max geen int",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?MAX=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "MAX",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Start geen int",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?START=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "START",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Start < 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?START=-1",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "START",
													"value": "-1"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Types geen int",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?TYPES=601, ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "TYPES",
													"value": "601, ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"ID\": \"ascii\",",
													"  \"NAAM\": \"Jodokus de Marmot\",",
													"  \"VOORNAAM\": \"Jodokus\",",
													"  \"ACHTERNAAM\": \"Marmot\",",
													"  \"LIDNR\": \"20110011\",",
													"  \"LIDTYPE_ID\": 601,",
													"  \"EMAIL\": \"Jodokus@fabeltje.nl\",",
													"  \"MOBIEL\": \"06-5223311\",",
													"  \"NOODNUMMER\": \"112\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan LIDTYPE_ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"NAAM\": \"Jodokus de Marmot\",",
													"  \"VOORNAAM\": \"Jodokus\",",
													"  \"ACHTERNAAM\": \"Marmot\",",
													"  \"LIDNR\": \"12345\",",
													"  \"LIDTYPE_ID\": \"FOUT\",",
													"  \"EMAIL\": \"Jodokus@fabeltje.nl\",",
													"  \"MOBIEL\": \"06-5223311\",",
													"  \"NOODNUMMER\": \"112\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan LIERIST ascii",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"NAAM\": \"Jodokus de Marmot\",",
													"  \"VOORNAAM\": \"Jodokus\",",
													"  \"ACHTERNAAM\": \"Marmot\",",
													"  \"LIDNR\": \"20110011\",",
													"  \"LIDTYPE_ID\": 601,",
													"  \"EMAIL\": \"Jodokus@fabeltje.nl\",",
													"  \"MOBIEL\": \"06-5223311\",",
													"  \"NOODNUMMER\": \"112\",",
													"  \"LIERIST\": \"AAAA\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan LIERIST geen bool",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"NAAM\": \"Jodokus de Marmot\",",
													"  \"VOORNAAM\": \"Jodokus\",",
													"  \"ACHTERNAAM\": \"Marmot\",",
													"  \"LIDNR\": \"20110011\",",
													"  \"LIDTYPE_ID\": 601,",
													"  \"EMAIL\": \"Jodokus@fabeltje.nl\",",
													"  \"MOBIEL\": \"06-5223311\",",
													"  \"NOODNUMMER\": \"112\",",
													"  \"LIERIST\": 2",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan INSTRUCTEUR ascii",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"NAAM\": \"Jodokus de Marmot\",",
													"  \"VOORNAAM\": \"Jodokus\",",
													"  \"ACHTERNAAM\": \"Marmot\",",
													"  \"LIDNR\": \"20110011\",",
													"  \"LIDTYPE_ID\": 601,",
													"  \"EMAIL\": \"Jodokus@fabeltje.nl\",",
													"  \"MOBIEL\": \"06-5223311\",",
													"  \"NOODNUMMER\": \"112\",",
													"  \"INSTRUCTEUR\": \"AAAA\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan INSTRUCTEUR geen bool",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"NAAM\": \"Jodokus de Marmot\",",
													"  \"VOORNAAM\": \"Jodokus\",",
													"  \"ACHTERNAAM\": \"Marmot\",",
													"  \"LIDNR\": \"20110011\",",
													"  \"LIDTYPE_ID\": 601,",
													"  \"EMAIL\": \"Jodokus@fabeltje.nl\",",
													"  \"MOBIEL\": \"06-5223311\",",
													"  \"NOODNUMMER\": \"112\",",
													"  \"INSTRUCTEUR\": 2",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan STARTLEIDER  ascii",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"NAAM\": \"Jodokus de Marmot\",",
													"  \"VOORNAAM\": \"Jodokus\",",
													"  \"ACHTERNAAM\": \"Marmot\",",
													"  \"LIDNR\": \"20110011\",",
													"  \"LIDTYPE_ID\": 601,",
													"  \"EMAIL\": \"Jodokus@fabeltje.nl\",",
													"  \"MOBIEL\": \"06-5223311\",",
													"  \"NOODNUMMER\": \"112\",",
													"  \"STARTLEIDER\": \"AAAA\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan STARTLEIDER  geen bool",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"NAAM\": \"Jodokus de Marmot\",",
													"  \"VOORNAAM\": \"Jodokus\",",
													"  \"ACHTERNAAM\": \"Marmot\",",
													"  \"LIDNR\": \"20110011\",",
													"  \"LIDTYPE_ID\": 601,",
													"  \"EMAIL\": \"Jodokus@fabeltje.nl\",",
													"  \"MOBIEL\": \"06-5223311\",",
													"  \"NOODNUMMER\": \"112\",",
													"  \"STARTLEIDER\": 3",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetObjects SQL injectie",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "64e90e05-c211-452c-acbb-f3f27f913751",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?VELDEN=* from ref_vliegtuigen; -- ",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "VELDEN",
													"value": "* from ref_vliegtuigen; -- "
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "DeleteObject ID is ascii",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "21f72e65-5e76-4bae-b63d-c77fdf6098bf",
												"exec": [
													"let nieuwID =  pm.environment.get(\"nieuwID\");",
													"console.log(\"DeleteObject id=\" + nieuwID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5fde7d49-65fa-4709-b00c-56ab7870faeb",
												"exec": [
													"let skipTest = pm.environment.get(\"skipTest\");",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/DeleteObject?ID=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"DeleteObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "ascii"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "27f9e921-f9bc-4c1f-8c27-2660546a271b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bd363d92-465d-4b49-9ee8-cc9756d431a4",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data missing 406",
							"item": [
								{
									"name": "GetObject zonder ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													"let nieuwTypesID = pm.environment.get(\"nieuwTypesID\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "DeleteObject zonder ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "21f72e65-5e76-4bae-b63d-c77fdf6098bf",
												"exec": [
													"let nieuwID =  pm.environment.get(\"nieuwID\");",
													"console.log(\"DeleteObject id=\" + nieuwID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5fde7d49-65fa-4709-b00c-56ab7870faeb",
												"exec": [
													"let skipTest = pm.environment.get(\"skipTest\");",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/DeleteObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"DeleteObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update record geen ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record = {",
													"  \"NAAM\": \"Jodokus de Marmot\",",
													"  \"VOORNAAM\": \"Jodokus\",",
													"  \"ACHTERNAAM\": \"Marmot\",",
													"  \"LIDNR\": \"1100110011\",",
													"  \"LIDTYPE_ID\": 601,",
													"  \"EMAIL\": \"Jodokus@fabeltje.nl\",",
													"  \"MOBIEL\": \"06-5223311\",",
													"  \"NOODNUMMER\": \"112\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan zonder data",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record geen LIDTYPE",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record = {",
													"  \"NAAM\": \"Jodokus de Marmot\",",
													"  \"VOORNAAM\": \"Jodokus\",",
													"  \"ACHTERNAAM\": \"Marmot\",",
													"  \"LIDNR\": \"1100110011\",",
													"//  \"LIDTYPE_ID\": 601,",
													"  \"EMAIL\": \"Jodokus@fabeltje.nl\",",
													"  \"MOBIEL\": \"06-5223311\",",
													"  \"NOODNUMMER\": \"112\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record geen NAAM",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record = {",
													"//  \"NAAM\": \"Jodokus de Marmot\",",
													"  \"VOORNAAM\": \"Jodokus\",",
													"  \"ACHTERNAAM\": \"Marmot\",",
													"  \"LIDNR\": \"1100110011\",",
													"  \"LIDTYPE_ID\": 601,",
													"  \"EMAIL\": \"Jodokus@fabeltje.nl\",",
													"  \"MOBIEL\": \"06-5223311\",",
													"  \"NOODNUMMER\": \"112\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "67446930-d30f-41da-ba3a-6119d80b11f9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0e68ec47-c3be-4ae0-8126-5d7aa2c4d551",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 406\", function () {",
											"    pm.response.to.have.status(406);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data bestaat al 409",
							"item": [
								{
									"name": "Nieuw record Dubbel ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"ID\": \"10855\",",
													"  \"NAAM\": \"Jodokus de Marmot\",",
													"  \"VOORNAAM\": \"Jodokus\",",
													"  \"ACHTERNAAM\": \"Marmot\",",
													"  \"LIDNR\": \"10101\",",
													"  \"LIDTYPE_ID\": 601,",
													"  \"EMAIL\": \"Jodokus@fabeltje.nl\",",
													"  \"MOBIEL\": \"06-5223311\",",
													"  \"NOODNUMMER\": \"112\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record Dubbel LidNr",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"  \"NAAM\": \"Jodokus de Marmot\",",
													"  \"VOORNAAM\": \"Jodokus\",",
													"  \"ACHTERNAAM\": \"Marmot\",",
													"  \"LIDNR\": \"12091\",",
													"  \"LIDTYPE_ID\": 601,",
													"  \"EMAIL\": \"Jodokus@fabeltje.nl\",",
													"  \"MOBIEL\": \"06-5223311\",",
													"  \"NOODNUMMER\": \"112\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "44cec2ad-ec47-4510-908a-73e66306f181",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4cf420b6-19d5-4e03-8ff3-3f5bb4c6ea21",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data verwerking error 500",
							"item": [
								{
									"name": "GetObjects VELDEN, onbekend veld",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "64e90e05-c211-452c-acbb-f3f27f913751",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?MAX=2&VELDEN=ID, BESTAATNIET",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "MAX",
													"value": "2"
												},
												{
													"key": "VELDEN",
													"value": "ID, BESTAATNIET"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c5ddb210-9236-479a-bfa8-52a3dad9da42",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0dddcec8-d0b6-41de-b1d2-670b268ceabc",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "27071642-ff20-4d20-8308-cf53e1ca765a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "95765a89-34e8-49dc-ba2b-7b35a08a4690",
								"type": "text/javascript",
								"exec": [
									"console.log(pm.response.headers.get('X-Error-Message'));"
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "29b276b6-b71e-4a38-8eb6-5c19e2efdddd",
						"type": "text/javascript",
						"exec": [
							"console.log(\"-----> \" + pm.info.requestName);",
							"",
							"let onderdeel = \"Leden\";",
							"pm.environment.set(\"onderdeel\", onderdeel);",
							"",
							"let url = pm.environment.get(\"base_url\") + \"/\" + onderdeel;",
							"pm.environment.set(\"url\", url);",
							"",
							"console.log(\"Url:\" + url);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d742e042-5361-48e8-af97-6144f08b79ec",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Rooster",
			"item": [
				{
					"name": "Create database",
					"item": [
						{
							"name": "Create table",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{create_database_url}}?FILLDATA=true",
									"host": [
										"{{create_database_url}}"
									],
									"query": [
										{
											"key": "FILLDATA",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create view",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c600ec59-6312-43bb-8dab-37c9c3d9851c",
										"exec": [
											"pm.test(\"Status code should not 500\", function () {",
											"    pm.response.to.not.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{create_view_url}}",
									"host": [
										"{{create_view_url}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4be058f5-b317-41e6-bd60-a9ac9edacc8d",
								"type": "text/javascript",
								"exec": [
									"let aanmaken_database = pm.environment.get(\"create_database\");",
									"let aanmaken_views = pm.environment.get(\"create_views\");",
									"",
									"let onderdeel = pm.environment.get(\"onderdeel\");",
									"",
									"let base_url = pm.environment.get(\"base_url\");",
									"let url = pm.environment.get(\"url\");",
									"",
									"",
									"if (aanmaken_database === \"false\")",
									"{",
									"    console.log(\"Aanmaken \" + onderdeel + \" database overslaan\");",
									"    pm.environment.set(\"create_database_url\", base_url + \"/dummy.php\");",
									"}",
									"else",
									"{",
									"    pm.environment.set(\"create_database_url\", url + \"/CreateTable\");",
									"}",
									"",
									"if (aanmaken_views === \"false\")",
									"{",
									"    console.log(\"Aanmaken \" + onderdeel + \" database views overslaan\");",
									"    pm.environment.set(\"create_view_url\", base_url + \"/dummy.php\");",
									"}",
									"else",
									"{",
									"    pm.environment.set(\"create_view_url\", url + \"/CreateViews\");",
									"}"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "cadd9189-661c-4b16-bdb0-f98dfea3192f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Basis get",
					"item": [
						{
							"name": "Alle velden",
							"item": [
								{
									"name": "GetObjects",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1ba88146-3f9d-4585-91e8-b0d67c958cd0",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"// Data voor volgende testen",
													"let savedData = JSON.stringify(jsonData);",
													"pm.environment.set(\"savedData\", savedData);",
													"",
													"pm.environment.set(\"getObjectId\", jsonData.dataset[0].ID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "aeb109f6-7bf7-4f9b-98c8-66d82fc88692",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects  Sorteer op ID ASC",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1ba88146-3f9d-4585-91e8-b0d67c958cd0",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"// Data voor volgende testen",
													"let savedData = JSON.stringify(jsonData);",
													"pm.environment.set(\"savedData\", savedData);",
													"",
													"pm.environment.set(\"getObjectId\", jsonData.dataset[0].ID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "aeb109f6-7bf7-4f9b-98c8-66d82fc88692",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?SORT=ID",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "SORT",
													"value": "ID"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects  Sorteer op ID DESC",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9482d8a-dafa-4427-b1be-a01f1e5157a0",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"pm.test(\"First record is last\", function () {",
													"",
													"    let lastID = jsonData.dataset[jsonData.dataset.length-1].ID",
													"    pm.expect(lastID).to.eql(pm.environment.get(\"getObjectId\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9e2de65d-0b92-4fa3-9b85-ccac51d4f5b4",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?SORT=ID DESC",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "SORT",
													"value": "ID DESC"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Max",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													"let savedData = JSON.parse(pm.environment.get(\"savedData\"));",
													"",
													"let jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"Aantal records == 2\", function () {",
													"    pm.expect(jsonData.dataset.length).to.eql(2);",
													"});",
													"",
													"pm.test(\"Totaal == orgineel\", function () {",
													"    pm.expect(jsonData.totaal).to.eql(savedData.totaal);",
													"});",
													"",
													"pm.test(\"LaatsteAanpassing == orgineel\", function () {",
													"    pm.expect(jsonData.laatste_aanpassing).to.eql(savedData.laatste_aanpassing);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?MAX=2",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "MAX",
													"value": "2"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "dc211dd2-0212-4bd9-9dc4-2a3361f46a38",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "90c899af-7ac7-4e30-9dd7-9f8ed5765a8f",
										"type": "text/javascript",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test('Heeft ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('ID');",
											"});",
											"",
											"pm.test('Heeft DATUM', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('DATUM');",
											"});",
											"",
											"pm.test('Heeft OCHTEND_DDI_ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('OCHTEND_DDI_ID');",
											"});",
											"",
											"pm.test('Heeft OCHTEND_INSTRUCTEUR_ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('OCHTEND_INSTRUCTEUR_ID');",
											"});",
											"",
											"pm.test('Heeft OCHTEND_STARTLEIDER_ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('OCHTEND_STARTLEIDER_ID');",
											"});",
											"",
											"pm.test('Heeft OCHTEND_LIERIST_ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('OCHTEND_LIERIST_ID');",
											"});",
											"",
											"pm.test('Heeft OCHTEND_HULPLIERIST_ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('OCHTEND_HULPLIERIST_ID');",
											"});",
											"",
											"pm.test('Heeft MIDDAG_DDI_ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('MIDDAG_DDI_ID');",
											"});",
											"",
											"pm.test('Heeft MIDDAG_INSTRUCTEUR_ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('MIDDAG_INSTRUCTEUR_ID');",
											"});",
											"",
											"pm.test('Heeft MIDDAG_STARTLEIDER_ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('MIDDAG_STARTLEIDER_ID');",
											"});",
											"",
											"pm.test('Heeft MIDDAG_LIERIST_ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('MIDDAG_LIERIST_ID');",
											"});",
											"",
											"pm.test('Heeft MIDDAG_HULPLIERIST_ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('MIDDAG_HULPLIERIST_ID');",
											"});",
											"",
											"pm.test('Heeft DDWV', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('DDWV');",
											"});",
											"",
											"pm.test('Heeft CLUB_BEDRIJF', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('CLUB_BEDRIJF');",
											"});",
											"",
											"pm.test('Heeft VERWIJDERD', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('VERWIJDERD');",
											"});",
											"",
											"pm.test('Heeft LAATSTE_AANPASSING', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('LAATSTE_AANPASSING');",
											"});",
											"",
											"",
											"pm.test('Heeft OCHTEND_DDI', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('OCHTEND_DDI');",
											"});",
											"",
											"pm.test('Heeft OCHTEND_INSTRUCTEUR', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('OCHTEND_INSTRUCTEUR');",
											"});",
											"",
											"pm.test('Heeft OCHTEND_STARTLEIDER', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('OCHTEND_STARTLEIDER');",
											"});",
											"",
											"pm.test('Heeft OCHTEND_LIERIST', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('OCHTEND_LIERIST');",
											"});",
											"",
											"pm.test('Heeft OCHTEND_HULPLIERIST', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('OCHTEND_HULPLIERIST');",
											"});",
											"",
											"pm.test('Heeft MIDDAG_DDI', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('MIDDAG_DDI');",
											"});",
											"",
											"pm.test('Heeft MIDDAG_INSTRUCTEUR', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('MIDDAG_INSTRUCTEUR');",
											"});",
											"",
											"pm.test('Heeft MIDDAG_STARTLEIDER', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('MIDDAG_STARTLEIDER');",
											"});",
											"",
											"pm.test('Heeft MIDDAG_LIERIST', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('MIDDAG_LIERIST');",
											"});",
											"",
											"pm.test('Heeft MIDDAG_HULPLIERIST', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('MIDDAG_HULPLIERIST');",
											"});",
											"",
											"",
											"pm.test(\"VERWIJDERD == 0\", function () {",
											"    var verwijderd = 0;",
											"    ",
											"    for (index = 0; index < jsonData.dataset.length; ++index) ",
											"    {",
											"        verwijderd += parseInt(jsonData.dataset[index].VERWIJDERD);   ",
											"    }",
											"    pm.expect(verwijderd).to.eql(0);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "GetObjects VELDEN",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "64e90e05-c211-452c-acbb-f3f27f913751",
										"exec": [
											"let jsonData = pm.response.json();",
											"let savedData = JSON.parse(pm.environment.get(\"savedData\"));",
											"",
											"",
											"pm.test(\"Aantal velden == 2\", function () {",
											"    let velden = Object.keys(jsonData.dataset[0]).length;",
											"    pm.expect(velden).to.eql(2);",
											"});",
											"",
											"pm.test(\"Totaal == orgineel\", function () {",
											"    pm.expect(jsonData.totaal).to.eql(savedData.totaal);",
											"});",
											"",
											"pm.test(\"LaatsteAanpassing == orgineel\", function () {",
											"    pm.expect(jsonData.laatste_aanpassing).to.eql(savedData.laatste_aanpassing);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/GetObjects?MAX=2&VELDEN=ID,MIDDAG_DDI",
									"host": [
										"{{url}}"
									],
									"path": [
										"GetObjects"
									],
									"query": [
										{
											"key": "MAX",
											"value": "2"
										},
										{
											"key": "VELDEN",
											"value": "ID,MIDDAG_DDI"
										}
									]
								},
								"description": "Haal alle types op"
							},
							"response": []
						},
						{
							"name": "GetObjects LAASTE_AANPASSING",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "64e90e05-c211-452c-acbb-f3f27f913751",
										"exec": [
											"let jsonData = pm.response.json();",
											"let savedData = JSON.parse(pm.environment.get(\"savedData\"));",
											"",
											"",
											"pm.test(\"Dataset == null\", function () {",
											"    let velden = Object.keys([0]).length;",
											"    pm.expect(jsonData.dataset).to.eql(null);",
											"});",
											"",
											"pm.test(\"Totaal == orgineel\", function () {",
											"    pm.expect(jsonData.totaal).to.eql(savedData.totaal);",
											"});",
											"",
											"pm.test(\"LaatsteAanpassing == orgineel\", function () {",
											"    pm.expect(jsonData.laatste_aanpassing).to.eql(savedData.laatste_aanpassing);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/GetObjects?LAATSTE_AANPASSING=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"GetObjects"
									],
									"query": [
										{
											"key": "LAATSTE_AANPASSING",
											"value": "true"
										}
									]
								},
								"description": "Haal alle types op"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "52272bfe-6a3f-4b2a-9953-b55c706adb1a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ac9874c6-8a2e-4386-bd9d-cc0f618b6e8f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test('Heeft totaal', function() {",
									"  pm.expect(jsonData).to.have.property('totaal');",
									"});",
									"",
									"pm.test('Heeft laatste aanpassing', function() {",
									"  pm.expect(jsonData).to.have.property('laatste_aanpassing');",
									"});",
									"",
									"pm.test('Heeft dataset', function() {",
									"  pm.expect(jsonData).to.have.property('dataset');",
									"});"
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Modificatie",
					"item": [
						{
							"name": "Alle Velden",
							"item": [
								{
									"name": "SaveObject",
									"item": [
										{
											"name": "Nieuw record opslaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
														"exec": [
															"",
															"let record = {",
															"    \"DATUM\": \"2020-01-05\",",
															"    \"DDWV\": \"1\",",
															"    \"CLUB_BEDRIJF\": \"0\"",
															"};",
															"",
															"let verleden = Math.floor(Math.random() * 5000);",
															"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
															"record.DATUM = d.toISOString().substring(0,10);",
															"",
															"var body = JSON.stringify(record); ",
															"pm.environment.set('request_body', body);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
														"exec": [
															"",
															"let skipTest = ((pm.response.code !== 200) || (pm.environment.get(\"skipTest\") === true));",
															"",
															"if (skipTest === false)",
															"{",
															"    let jsonData = pm.response.json();",
															"    pm.environment.set(\"nieuwID\", jsonData.ID);",
															"    console.log(\"nieuwID: \"+ jsonData.ID);",
															"}",
															"else",
															"{",
															"   pm.environment.set(\"nieuwID\", -1); ",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{modify_database_url}}",
													"host": [
														"{{modify_database_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update record",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
														"exec": [
															"",
															"let record = {",
															"    \"ID\": 1,",
															"    \"OCHTEND_DDI_ID\": 10001,",
															"    \"OCHTEND_INSTRUCTEUR_ID\": 10063,",
															"    \"OCHTEND_LIERIST_ID\": 10115,",
															"    \"OCHTEND_HULPLIERIST_ID\": 10213,",
															"    \"OCHTEND_STARTLEIDER_ID\": 10265,",
															"    \"MIDDAG_DDI_ID\": 10395,",
															"    \"MIDDAG_INSTRUCTEUR_ID\": 10408,",
															"    \"MIDDAG_LIERIST_ID\": 10470,",
															"    \"MIDDAG_HULPLIERIST_ID\": 10632,",
															"    \"MIDDAG_STARTLEIDER_ID\": 10858",
															"};",
															"",
															"//record.ID =  pm.environment.get(\"nieuwID\");",
															"console.log(\"Update id=\" + record.ID);",
															"",
															"var body = JSON.stringify(record); ",
															"pm.environment.set('request_body', body);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{modify_database_url}}",
													"host": [
														"{{modify_database_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8a0ba2f5-04f1-4324-bb31-2e6ad7c068e4",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3b6ab46e-bda3-49b0-a5f7-e4e06531efa0",
												"type": "text/javascript",
												"exec": [
													"",
													"let jsonData = null;",
													"let postData = null;",
													"let skipTest = ((pm.response.code !== 200) || (pm.environment.get(\"skipTest\") === true));",
													"",
													"if (skipTest === false)",
													"{",
													"    postData = JSON.parse(pm.environment.get('request_body'));",
													"    jsonData = pm.response.json();",
													"}",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"ID\", function () {",
													"    if (postData.hasOwnProperty('ID'))",
													"    pm.expect(jsonData.ID.toString()).to.eql(postData.ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"DATUM\", function () {",
													"    if (postData.hasOwnProperty('DATUM'))",
													"        pm.expect(jsonData.DATUM.toString()).to.eql(postData.DATUM.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"OCHTEND_DDI_ID\", function () {",
													"    if (postData.hasOwnProperty('OCHTEND_DDI_ID'))",
													"        pm.expect(jsonData.OCHTEND_DDI_ID.toString()).to.eql(postData.OCHTEND_DDI_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"OCHTEND_INSTRUCTEUR_ID\", function () {",
													"    if (postData.hasOwnProperty('OCHTEND_INSTRUCTEUR_ID'))",
													"        pm.expect(jsonData.OCHTEND_INSTRUCTEUR_ID.toString()).to.eql(postData.OCHTEND_INSTRUCTEUR_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"OCHTEND_STARTLEIDER_ID\", function () {",
													"    if (postData.hasOwnProperty('OCHTEND_STARTLEIDER_ID'))",
													"        pm.expect(jsonData.OCHTEND_STARTLEIDER_ID.toString()).to.eql(postData.OCHTEND_STARTLEIDER_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"OCHTEND_LIERIST_ID\", function () {",
													"    if (postData.hasOwnProperty('OCHTEND_LIERIST_ID'))",
													"        pm.expect(jsonData.OCHTEND_LIERIST_ID.toString()).to.eql(postData.OCHTEND_LIERIST_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"OCHTEND_HULPLIERIST_ID\", function () {",
													"    if (postData.hasOwnProperty('OCHTEND_HULPLIERIST_ID'))",
													"        pm.expect(jsonData.OCHTEND_HULPLIERIST_ID.toString()).to.eql(postData.OCHTEND_HULPLIERIST_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"MIDDAG_DDI_ID\", function () {",
													"    if (postData.hasOwnProperty('MIDDAG_DDI_ID'))",
													"        pm.expect(jsonData.MIDDAG_DDI_ID.toString()).to.eql(postData.MIDDAG_DDI_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"MIDDAG_INSTRUCTEUR_ID\", function () {",
													"    if (postData.hasOwnProperty('MIDDAG_INSTRUCTEUR_ID'))",
													"        pm.expect(jsonData.MIDDAG_INSTRUCTEUR_ID.toString()).to.eql(postData.MIDDAG_INSTRUCTEUR_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"MIDDAG_STARTLEIDER_ID\", function () {",
													"    if (postData.hasOwnProperty('MIDDAG_STARTLEIDER_ID'))",
													"        pm.expect(jsonData.MIDDAG_STARTLEIDER_ID.toString()).to.eql(postData.MIDDAG_STARTLEIDER_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"MIDDAG_LIERIST_ID\", function () {",
													"    if (postData.hasOwnProperty('MIDDAG_LIERIST_ID'))",
													"        pm.expect(jsonData.MIDDAG_LIERIST_ID.toString()).to.eql(postData.MIDDAG_LIERIST_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"MIDDAG_HULPLIERIST_ID\", function () {",
													"    if (postData.hasOwnProperty('MIDDAG_HULPLIERIST_ID'))",
													"        pm.expect(jsonData.MIDDAG_HULPLIERIST_ID.toString()).to.eql(postData.MIDDAG_HULPLIERIST_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"DDWV\", function () {",
													"    if (postData.hasOwnProperty('DDWV'))",
													"        pm.expect(jsonData.DDWV.toString()).to.eql(postData.DDWV.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"CLUB_BEDRIJF\", function () {",
													"    if (postData.hasOwnProperty('CLUB_BEDRIJF'))",
													"        pm.expect(jsonData.CLUB_BEDRIJF.toString()).to.eql(postData.CLUB_BEDRIJF.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"VERWIJDERD\", function () {",
													"    pm.expect(jsonData.VERWIJDERD.toString()).to.eql('0');",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "GetObject",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													"let getObjectId =  pm.environment.get(\"getObjectId\");",
													"console.log(\"GetObject id=\" + getObjectId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject?ID={{getObjectId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "{{getObjectId}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "17b676fc-063c-4f1a-8c42-f636d29774b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f5bab96b-eb48-4ee0-b35d-0b32478f8e0e",
										"type": "text/javascript",
										"exec": [
											"// 200 Succesvol",
											"// 409 Kan record niet opslaan vanwege duplicatie",
											"pm.test(\"Status code is 200 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,409]);",
											"});",
											"",
											"let jsonData = null;",
											"let skipTest = false;",
											"",
											"if (pm.request.method === 'GET')",
											"    skipTest = false;",
											"else",
											"    skipTest = ((pm.response.code !== 200) || (pm.environment.get(\"skipTest\") === true));",
											"",
											"if (pm.responsecode === 409)",
											"    console.log(pm.response.headers.get('X-Error-Message'));",
											"",
											"if (skipTest === false)",
											"    jsonData = pm.response.json();",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft ID', function() {",
											"  pm.expect(jsonData).to.have.property('ID');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft DATUM', function() {",
											"  pm.expect(jsonData).to.have.property('DATUM');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft OCHTEND_DDI_ID', function() {",
											"  pm.expect(jsonData).to.have.property('OCHTEND_DDI_ID');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft OCHTEND_STARTLEIDER_ID', function() {",
											"  pm.expect(jsonData).to.have.property('OCHTEND_STARTLEIDER_ID');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft OCHTEND_LIERIST_ID', function() {",
											"  pm.expect(jsonData).to.have.property('OCHTEND_LIERIST_ID');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft OCHTEND_HULPLIERIST_ID', function() {",
											"  pm.expect(jsonData).to.have.property('OCHTEND_HULPLIERIST_ID');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft MIDDAG_DDI_ID', function() {",
											"  pm.expect(jsonData).to.have.property('MIDDAG_DDI_ID');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft MIDDAG_INSTRUCTEUR_ID', function() {",
											"  pm.expect(jsonData).to.have.property('MIDDAG_INSTRUCTEUR_ID');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft MIDDAG_STARTLEIDER_ID', function() {",
											"  pm.expect(jsonData).to.have.property('MIDDAG_STARTLEIDER_ID');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft MIDDAG_LIERIST_ID', function() {",
											"  pm.expect(jsonData).to.have.property('MIDDAG_LIERIST_ID');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft MIDDAG_HULPLIERIST_ID', function() {",
											"  pm.expect(jsonData).to.have.property('MIDDAG_HULPLIERIST_ID');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft DDWV', function() {",
											"  pm.expect(jsonData).to.have.property('DDWV');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft CLUB_BEDRIJF', function() {",
											"  pm.expect(jsonData).to.have.property('CLUB_BEDRIJF');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft VERWIJDERD', function() {",
											"  pm.expect(jsonData).to.have.property('VERWIJDERD');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft LAATSTE_AANPASSING', function() {",
											"  pm.expect(jsonData).to.have.property('LAATSTE_AANPASSING');",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "DeleteObject",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "21f72e65-5e76-4bae-b63d-c77fdf6098bf",
										"exec": [
											"let nieuwID =  pm.environment.get(\"nieuwID\");",
											"console.log(\"DeleteObject id=\" + nieuwID);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5fde7d49-65fa-4709-b00c-56ab7870faeb",
										"exec": [
											"let skipTest = pm.environment.get(\"skipTest\");",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{delete_database_url}}?ID={{nieuwID}}",
									"host": [
										"{{delete_database_url}}"
									],
									"query": [
										{
											"key": "ID",
											"value": "{{nieuwID}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "69f40b13-5972-44fb-a002-df9d63c6bab4",
								"type": "text/javascript",
								"exec": [
									"",
									"let modify_database = pm.environment.get(\"modify_database\");",
									"",
									"let onderdeel = pm.environment.get(\"onderdeel\");",
									"",
									"let base_url = pm.environment.get(\"base_url\");",
									"let url = pm.environment.get(\"url\");",
									"",
									"",
									"if (modify_database === \"false\")",
									"{",
									"    console.log(\"Modificatie \" + onderdeel + \" overslaan\");",
									"    pm.environment.set(\"modify_database_url\", base_url + \"/dummy.php\");",
									"    pm.environment.set(\"delete_database_url\", base_url + \"/dummy.php\");",
									"    pm.environment.set(\"skipTest\", true);",
									"}",
									"else",
									"{",
									"    pm.environment.set(\"modify_database_url\", url + \"/SaveObject\");",
									"    pm.environment.set(\"delete_database_url\", url + \"/DeleteObject\");",
									"    pm.environment.set(\"skipTest\", false);",
									"}"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "84bee5c6-0551-4f3f-9888-c29e56856d3a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Error",
					"item": [
						{
							"name": "Data missing 404",
							"item": [
								{
									"name": "GetObject geen data",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													"",
													"let getObjectId =  pm.environment.get(\"getObjectId\");",
													"console.log(\"GetObject id=\" + getObjectId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject?ID=-1",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "-1"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "09e08933-f530-4685-8377-4d7e7a626393",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "75d66cec-853b-4818-b4e6-a5ed70208368",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data validatie error 405",
							"item": [
								{
									"name": "GetObjects LAASTE_AANPASSING geen bool",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "64e90e05-c211-452c-acbb-f3f27f913751",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?LAATSTE_AANPASSING=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "LAATSTE_AANPASSING",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObject met verkeerd ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject?ID=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "ascii"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GetObjects Max geen int",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?MAX=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "MAX",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Start geen int",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?START=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "START",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Start < 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?START=-1",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "START",
													"value": "-1"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    \"ID\": \"ascii\",",
													"    \"DATUM\": \"2020-01-05\",",
													"    \"DDWV\": \"1\",",
													"    \"CLUB_BEDRIJF\": \"0\"",
													"};",
													"",
													"let verleden = Math.floor(Math.random() * 5000);",
													"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
													"record.DATUM = d.toISOString().substring(0,10);",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan OCHTEND_DDI_ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    \"DATUM\": \"2020-01-05\",",
													"    \"DDWV\": \"1\",",
													"    \"CLUB_BEDRIJF\": \"0\",",
													"    \"OCHTEND_DDI_ID\": \"QQ\"",
													"};",
													"",
													"let verleden = Math.floor(Math.random() * 5000);",
													"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
													"record.DATUM = d.toISOString().substring(0,10);",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan OCHTEND_INSTRUCTEUR_ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    \"DATUM\": \"2020-01-05\",",
													"    \"DDWV\": \"1\",",
													"    \"CLUB_BEDRIJF\": \"0\",",
													"    \"OCHTEND_INSTRUCTEUR_ID\": \"QQ\"",
													"};",
													"",
													"let verleden = Math.floor(Math.random() * 5000);",
													"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
													"record.DATUM = d.toISOString().substring(0,10);",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan OCHTEND_STARTLEIDER_ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    \"DATUM\": \"2020-01-05\",",
													"    \"DDWV\": \"1\",",
													"    \"CLUB_BEDRIJF\": \"0\",",
													"    \"OCHTEND_STARTLEIDER_ID\": \"QQ\"",
													"};",
													"",
													"let verleden = Math.floor(Math.random() * 5000);",
													"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
													"record.DATUM = d.toISOString().substring(0,10);",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan OCHTEND_LIERIST_ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    \"DATUM\": \"2020-01-05\",",
													"    \"DDWV\": \"1\",",
													"    \"CLUB_BEDRIJF\": \"0\",",
													"    \"OCHTEND_LIERIST_ID\": \"QQ\"",
													"};",
													"",
													"let verleden = Math.floor(Math.random() * 5000);",
													"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
													"record.DATUM = d.toISOString().substring(0,10);",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan OCHTEND_HULPLIERIST_ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    \"DATUM\": \"2020-01-05\",",
													"    \"DDWV\": \"1\",",
													"    \"CLUB_BEDRIJF\": \"0\",",
													"    \"OCHTEND_HULPLIERIST_ID\": \"QQ\"",
													"};",
													"",
													"let verleden = Math.floor(Math.random() * 5000);",
													"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
													"record.DATUM = d.toISOString().substring(0,10);",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan MIDDAG_DDI_ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    \"DATUM\": \"2020-01-05\",",
													"    \"DDWV\": \"1\",",
													"    \"CLUB_BEDRIJF\": \"0\",",
													"    \"MIDDAG_DDI_ID\": \"QQ\"",
													"};",
													"",
													"let verleden = Math.floor(Math.random() * 5000);",
													"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
													"record.DATUM = d.toISOString().substring(0,10);",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan MIDDAG_INSTRUCTEUR_ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    \"DATUM\": \"2020-01-05\",",
													"    \"DDWV\": \"1\",",
													"    \"CLUB_BEDRIJF\": \"0\",",
													"    \"MIDDAG_INSTRUCTEUR_ID\": \"QQ\"",
													"};",
													"",
													"let verleden = Math.floor(Math.random() * 5000);",
													"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
													"record.DATUM = d.toISOString().substring(0,10);",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan MIDDAG_STARTLEIDER_ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    \"DATUM\": \"2020-01-05\",",
													"    \"DDWV\": \"1\",",
													"    \"CLUB_BEDRIJF\": \"0\",",
													"    \"MIDDAG_STARTLEIDER_ID\": \"QQ\"",
													"};",
													"",
													"let verleden = Math.floor(Math.random() * 5000);",
													"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
													"record.DATUM = d.toISOString().substring(0,10);",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan MIDDAG_LIERIST_ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    \"DATUM\": \"2020-01-05\",",
													"    \"DDWV\": \"1\",",
													"    \"CLUB_BEDRIJF\": \"0\",",
													"    \"MIDDAG_LIERIST_ID\": \"QQ\"",
													"};",
													"",
													"let verleden = Math.floor(Math.random() * 5000);",
													"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
													"record.DATUM = d.toISOString().substring(0,10);",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan MIDDAG_HULPLIERIST_ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    \"DATUM\": \"2020-01-05\",",
													"    \"DDWV\": \"1\",",
													"    \"CLUB_BEDRIJF\": \"0\",",
													"    \"MIDDAG_HULPLIERIST_ID\": \"QQ\"",
													"};",
													"",
													"let verleden = Math.floor(Math.random() * 5000);",
													"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
													"record.DATUM = d.toISOString().substring(0,10);",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan DDWV geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    \"DATUM\": \"2020-01-05\",",
													"    \"DDWV\": \"II\",",
													"    \"CLUB_BEDRIJF\": \"0\"",
													"};",
													"",
													"let verleden = Math.floor(Math.random() * 5000);",
													"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
													"record.DATUM = d.toISOString().substring(0,10);",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan DDWV geen bool",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    \"DATUM\": \"2020-01-05\",",
													"    \"DDWV\": 2,",
													"    \"CLUB_BEDRIJF\": \"0\"",
													"};",
													"",
													"let verleden = Math.floor(Math.random() * 5000);",
													"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
													"record.DATUM = d.toISOString().substring(0,10);",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan CLUB_BEDRIJF geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    \"DATUM\": \"2020-01-05\",",
													"    \"DDWV\": \"1\",",
													"    \"CLUB_BEDRIJF\": \"II\"",
													"};",
													"",
													"let verleden = Math.floor(Math.random() * 5000);",
													"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
													"record.DATUM = d.toISOString().substring(0,10);",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan CLUB_BEDRIJF geen bool",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    \"DATUM\": \"2020-01-05\",",
													"    \"DDWV\": 1,",
													"    \"CLUB_BEDRIJF\": 8",
													"};",
													"",
													"let verleden = Math.floor(Math.random() * 5000);",
													"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
													"record.DATUM = d.toISOString().substring(0,10);",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan DATUM verkeerde datum",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    DATUM: \"2020-02-30\",",
													"    \"DDWV\": 1,",
													"    \"CLUB_BEDRIJF\": 8",
													"};",
													"",
													"let verleden = Math.floor(Math.random() * 5000);",
													"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
													"record.DATUM = d.toISOString().substring(0,10);",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan DATUM onjuist formaat",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    \"DATUM\": \"ascii\",",
													"    \"DDWV\": 1,",
													"    \"CLUB_BEDRIJF\": 8",
													"};",
													"",
													"let verleden = Math.floor(Math.random() * 5000);",
													"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
													"record.DATUM = d.toISOString().substring(0,10);",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan DATUM onjuist formaat 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    DATUM: \"2020-1-01\",",
													"    \"DDWV\": 1,",
													"    \"CLUB_BEDRIJF\": 8",
													"};",
													"",
													"let verleden = Math.floor(Math.random() * 5000);",
													"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
													"record.DATUM = d.toISOString().substring(0,10);",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetObjects SQL injectie",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "64e90e05-c211-452c-acbb-f3f27f913751",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?VELDEN=* from ref_vliegtuigen; -- ",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "VELDEN",
													"value": "* from ref_vliegtuigen; -- "
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "DeleteObject ID is ascii",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "21f72e65-5e76-4bae-b63d-c77fdf6098bf",
												"exec": [
													"let nieuwID =  pm.environment.get(\"nieuwID\");",
													"console.log(\"DeleteObject id=\" + nieuwID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5fde7d49-65fa-4709-b00c-56ab7870faeb",
												"exec": [
													"let skipTest = pm.environment.get(\"skipTest\");",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/DeleteObject?ID=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"DeleteObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "ascii"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "27f9e921-f9bc-4c1f-8c27-2660546a271b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bd363d92-465d-4b49-9ee8-cc9756d431a4",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data missing 406",
							"item": [
								{
									"name": "GetObject zonder ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													"let nieuwTypesID = pm.environment.get(\"nieuwTypesID\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "DeleteObject zonder ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "21f72e65-5e76-4bae-b63d-c77fdf6098bf",
												"exec": [
													"let nieuwID =  pm.environment.get(\"nieuwID\");",
													"console.log(\"DeleteObject id=\" + nieuwID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5fde7d49-65fa-4709-b00c-56ab7870faeb",
												"exec": [
													"let skipTest = pm.environment.get(\"skipTest\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/DeleteObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"DeleteObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update record geen ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record = {",
													"    \"DATUM\": \"2020-01-05\",",
													"    \"DDWV\": \"1\",",
													"    \"CLUB_BEDRIJF\": \"0\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan zonder data",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record geen DATUM",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record = {",
													"//    \"DATUM\": \"2020-01-05\",",
													"    \"DDWV\": \"1\",",
													"    \"CLUB_BEDRIJF\": \"0\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record geen CLUB_BEDRIJF",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record = {",
													"    \"DATUM\": \"2020-01-05\",",
													"    \"DDWV\": \"1\",",
													"//    \"CLUB_BEDRIJF\": \"0\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record geen DDWV",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record = {",
													"    \"DATUM\": \"2020-01-05\",",
													"//    \"DDWV\": \"1\",",
													"    \"CLUB_BEDRIJF\": \"0\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "67446930-d30f-41da-ba3a-6119d80b11f9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0e68ec47-c3be-4ae0-8126-5d7aa2c4d551",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 406\", function () {",
											"    pm.response.to.have.status(406);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data bestaat al 409",
							"item": [
								{
									"name": "Nieuw record Dubbel ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    \"ID\": \"1\",",
													"    \"DATUM\": \"2020-01-05\",",
													"    \"DDWV\": \"1\",",
													"    \"CLUB_BEDRIJF\": \"0\"",
													"};",
													"",
													"let verleden = Math.floor(Math.random() * 5000);",
													"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
													"record.DATUM = d.toISOString().substring(0,10);",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record Dubbele Datum",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    \"DATUM\": \"1999-01-01\",",
													"    \"DDWV\": \"1\",",
													"    \"CLUB_BEDRIJF\": \"0\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0ef4ebe0-a35b-42b7-aca0-56e6f77a332d",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2e001eb2-5096-4498-ac48-b453d4a27ea4",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data verwerking error 500",
							"item": [
								{
									"name": "GetObjects VELDEN, onbekend veld",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "64e90e05-c211-452c-acbb-f3f27f913751",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?MAX=2&VELDEN=ID, BESTAATNIET",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "MAX",
													"value": "2"
												},
												{
													"key": "VELDEN",
													"value": "ID, BESTAATNIET"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c5ddb210-9236-479a-bfa8-52a3dad9da42",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0dddcec8-d0b6-41de-b1d2-670b268ceabc",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "27071642-ff20-4d20-8308-cf53e1ca765a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "95765a89-34e8-49dc-ba2b-7b35a08a4690",
								"type": "text/javascript",
								"exec": [
									"console.log(pm.response.headers.get('X-Error-Message'));"
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "29b276b6-b71e-4a38-8eb6-5c19e2efdddd",
						"type": "text/javascript",
						"exec": [
							"console.log(\"-----> \" + pm.info.requestName);",
							"",
							"let onderdeel = \"Rooster\";",
							"pm.environment.set(\"onderdeel\", onderdeel);",
							"",
							"let url = pm.environment.get(\"base_url\") + \"/\" + onderdeel;",
							"pm.environment.set(\"url\", url);",
							"",
							"console.log(\"Url:\" + url);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d742e042-5361-48e8-af97-6144f08b79ec",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Aanmelding Leden",
			"item": [
				{
					"name": "Create database",
					"item": [
						{
							"name": "Create table",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{create_database_url}}?FILLDATA=true",
									"host": [
										"{{create_database_url}}"
									],
									"query": [
										{
											"key": "FILLDATA",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create view",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c600ec59-6312-43bb-8dab-37c9c3d9851c",
										"exec": [
											"pm.test(\"Status code should not 500\", function () {",
											"    pm.response.to.not.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{create_view_url}}",
									"host": [
										"{{create_view_url}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4be058f5-b317-41e6-bd60-a9ac9edacc8d",
								"type": "text/javascript",
								"exec": [
									"let aanmaken_database = pm.environment.get(\"create_database\");",
									"let aanmaken_views = pm.environment.get(\"create_views\");",
									"",
									"let onderdeel = pm.environment.get(\"onderdeel\");",
									"",
									"let base_url = pm.environment.get(\"base_url\");",
									"let url = pm.environment.get(\"url\");",
									"",
									"",
									"if (aanmaken_database === \"false\")",
									"{",
									"    console.log(\"Aanmaken \" + onderdeel + \" database overslaan\");",
									"    pm.environment.set(\"create_database_url\", base_url + \"/dummy.php\");",
									"}",
									"else",
									"{",
									"    pm.environment.set(\"create_database_url\", url + \"/CreateTable\");",
									"}",
									"",
									"if (aanmaken_views === \"false\")",
									"{",
									"    console.log(\"Aanmaken \" + onderdeel + \" database views overslaan\");",
									"    pm.environment.set(\"create_view_url\", base_url + \"/dummy.php\");",
									"}",
									"else",
									"{",
									"    pm.environment.set(\"create_view_url\", url + \"/CreateViews\");",
									"}"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "cadd9189-661c-4b16-bdb0-f98dfea3192f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Basis get",
					"item": [
						{
							"name": "Alle velden",
							"item": [
								{
									"name": "GetObjects",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1ba88146-3f9d-4585-91e8-b0d67c958cd0",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"// Data voor volgende testen",
													"let savedData = JSON.stringify(jsonData);",
													"pm.environment.set(\"savedData\", savedData);",
													"",
													"pm.environment.set(\"getObjectId\", jsonData.dataset[0].ID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "aeb109f6-7bf7-4f9b-98c8-66d82fc88692",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects  Sorteer op ID ASC",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1ba88146-3f9d-4585-91e8-b0d67c958cd0",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"// Data voor volgende testen",
													"let savedData = JSON.stringify(jsonData);",
													"pm.environment.set(\"savedData\", savedData);",
													"",
													"pm.environment.set(\"getObjectId\", jsonData.dataset[0].ID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "aeb109f6-7bf7-4f9b-98c8-66d82fc88692",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?SORT=ID",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "SORT",
													"value": "ID"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects  Sorteer op ID DESC",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9482d8a-dafa-4427-b1be-a01f1e5157a0",
												"exec": [
													"let jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"Aantal records == totaal\", function () {",
													"    let aantal = parseInt(jsonData.totaal);",
													"    ",
													"    pm.expect(jsonData.dataset.length).to.eql(aantal);",
													"});",
													"",
													"pm.test(\"First record is last\", function () {",
													"",
													"    let lastID = jsonData.dataset[jsonData.dataset.length-1].ID",
													"    pm.expect(lastID).to.eql(pm.environment.get(\"getObjectId\"));",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9e2de65d-0b92-4fa3-9b85-ccac51d4f5b4",
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?SORT=ID DESC",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "SORT",
													"value": "ID DESC"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Max",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													"let savedData = JSON.parse(pm.environment.get(\"savedData\"));",
													"",
													"let jsonData = pm.response.json();",
													"",
													"",
													"pm.test(\"Aantal records == 2\", function () {",
													"    pm.expect(jsonData.dataset.length).to.eql(2);",
													"});",
													"",
													"pm.test(\"Totaal == orgineel\", function () {",
													"    pm.expect(jsonData.totaal).to.eql(savedData.totaal);",
													"});",
													"",
													"pm.test(\"LaatsteAanpassing == orgineel\", function () {",
													"    pm.expect(jsonData.laatste_aanpassing).to.eql(savedData.laatste_aanpassing);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?MAX=2",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "MAX",
													"value": "2"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "dc211dd2-0212-4bd9-9dc4-2a3361f46a38",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "90c899af-7ac7-4e30-9dd7-9f8ed5765a8f",
										"type": "text/javascript",
										"exec": [
											"let jsonData = pm.response.json();",
											"",
											"pm.test('Heeft ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('ID');",
											"});",
											"",
											"pm.test('Heeft DATUM', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('DATUM');",
											"});",
											"",
											"pm.test('Heeft POSITIE', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('POSITIE');",
											"});",
											"",
											"pm.test('Heeft LID_ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('LID_ID');",
											"});",
											"",
											"pm.test('Heeft VOORAANMELDING', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('VOORAANMELDING');",
											"});",
											"",
											"pm.test('Heeft AANKOMST', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('AANKOMST');",
											"});",
											"",
											"pm.test('Heeft VERTREK', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('VERTREK');",
											"});",
											"",
											"pm.test('Heeft OVERLAND_VLIEGTUIG_ID', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('OVERLAND_VLIEGTUIG_ID');",
											"});",
											"",
											"pm.test('Heeft VOORKEUR_VLIEGTUIG_TYPE', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('VOORKEUR_VLIEGTUIG_TYPE');",
											"});",
											"",
											"pm.test('Heeft OPMERKINGEN', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('OPMERKINGEN');",
											"});",
											"",
											"pm.test('Heeft VERWIJDERD', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('VERWIJDERD');",
											"});",
											"",
											"pm.test('Heeft LAATSTE_AANPASSING', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('LAATSTE_AANPASSING');",
											"});",
											"",
											"",
											"",
											"pm.test('Heeft VLIEGER', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('VLIEGER');",
											"});",
											"",
											"pm.test('Heeft VLIEGTUIGTYPE_CODE', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('VLIEGTUIGTYPE_CODE');",
											"});",
											"",
											"pm.test('Heeft VLIEGTUIGTYPE_OMS', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('VLIEGTUIGTYPE_OMS');",
											"});",
											"",
											"pm.test('Heeft REGCALL', function() {",
											"  pm.expect(jsonData.dataset[0]).to.have.property('REGCALL');",
											"});",
											"",
											"",
											"pm.test(\"VERWIJDERD == 0\", function () {",
											"    var verwijderd = 0;",
											"    ",
											"    for (index = 0; index < jsonData.dataset.length; ++index) ",
											"    {",
											"        verwijderd += parseInt(jsonData.dataset[index].VERWIJDERD);   ",
											"    }",
											"    pm.expect(verwijderd).to.eql(0);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "GetObjects VELDEN",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "64e90e05-c211-452c-acbb-f3f27f913751",
										"exec": [
											"let jsonData = pm.response.json();",
											"let savedData = JSON.parse(pm.environment.get(\"savedData\"));",
											"",
											"",
											"pm.test(\"Aantal velden == 2\", function () {",
											"    let velden = Object.keys(jsonData.dataset[0]).length;",
											"    pm.expect(velden).to.eql(2);",
											"});",
											"",
											"pm.test(\"Totaal == orgineel\", function () {",
											"    pm.expect(jsonData.totaal).to.eql(savedData.totaal);",
											"});",
											"",
											"pm.test(\"LaatsteAanpassing == orgineel\", function () {",
											"    pm.expect(jsonData.laatste_aanpassing).to.eql(savedData.laatste_aanpassing);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/GetObjects?MAX=2&VELDEN=ID,VLIEGER",
									"host": [
										"{{url}}"
									],
									"path": [
										"GetObjects"
									],
									"query": [
										{
											"key": "MAX",
											"value": "2"
										},
										{
											"key": "VELDEN",
											"value": "ID,VLIEGER"
										}
									]
								},
								"description": "Haal alle types op"
							},
							"response": []
						},
						{
							"name": "GetObjects LAASTE_AANPASSING",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "64e90e05-c211-452c-acbb-f3f27f913751",
										"exec": [
											"let jsonData = pm.response.json();",
											"let savedData = JSON.parse(pm.environment.get(\"savedData\"));",
											"",
											"",
											"pm.test(\"Dataset == null\", function () {",
											"    let velden = Object.keys([0]).length;",
											"    pm.expect(jsonData.dataset).to.eql(null);",
											"});",
											"",
											"pm.test(\"Totaal == orgineel\", function () {",
											"    pm.expect(jsonData.totaal).to.eql(savedData.totaal);",
											"});",
											"",
											"pm.test(\"LaatsteAanpassing == orgineel\", function () {",
											"    pm.expect(jsonData.laatste_aanpassing).to.eql(savedData.laatste_aanpassing);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/GetObjects?LAATSTE_AANPASSING=true",
									"host": [
										"{{url}}"
									],
									"path": [
										"GetObjects"
									],
									"query": [
										{
											"key": "LAATSTE_AANPASSING",
											"value": "true"
										}
									]
								},
								"description": "Haal alle types op"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "52272bfe-6a3f-4b2a-9953-b55c706adb1a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ac9874c6-8a2e-4386-bd9d-cc0f618b6e8f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test('Heeft totaal', function() {",
									"  pm.expect(jsonData).to.have.property('totaal');",
									"});",
									"",
									"pm.test('Heeft laatste aanpassing', function() {",
									"  pm.expect(jsonData).to.have.property('laatste_aanpassing');",
									"});",
									"",
									"pm.test('Heeft dataset', function() {",
									"  pm.expect(jsonData).to.have.property('dataset');",
									"});"
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Modificatie",
					"item": [
						{
							"name": "Alle Velden",
							"item": [
								{
									"name": "SaveObject",
									"item": [
										{
											"name": "Nieuw record opslaan",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
														"exec": [
															"let record = ",
															"{",
															"  \"DATUM\": \"2020-01-12\",",
															"  \"POSITIE\": 12,",
															"  \"LID_ID\": 10408,",
															"  \"VOORAANMELDING\": 1,",
															"  \"AANKOMST\": \"2002-10-02T10:00:20-05:00\",",
															"  \"OVERLAND_VLIEGTUIG_ID\": 200,",
															"  \"VOORKEUR_VLIEGTUIG_TYPE\": \"404, 405\",",
															"  \"OPMERKINGEN\": \"Heeft in de ochtend lierdienst\"",
															"}",
															"",
															"let verleden = Math.floor(Math.random() * 5000);",
															"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
															"record.DATUM = d.toISOString().substring(0,10);",
															"",
															"var body = JSON.stringify(record); ",
															"pm.environment.set('request_body', body);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
														"exec": [
															"",
															"let skipTest = ((pm.response.code !== 200) || (pm.environment.get(\"skipTest\") === true));",
															"",
															"if (skipTest === false)",
															"{",
															"    let jsonData = pm.response.json();",
															"    pm.environment.set(\"nieuwID\", jsonData.ID);",
															"    console.log(\"nieuwID: \"+ jsonData.ID);",
															"}",
															"else",
															"{",
															"   pm.environment.set(\"nieuwID\", -1); ",
															"}",
															"",
															"(skipTest ? pm.test.skip : pm.test)",
															"(\"AANKOMST lokale tijd\", function () {",
															"    let jsonData = pm.response.json();",
															"    pm.expect(jsonData.AANKOMST.toString()).to.eql(\"17:00:00\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{modify_database_url}}",
													"host": [
														"{{modify_database_url}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update record",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
														"exec": [
															"",
															"let record = ",
															"{",
															"  \"POSITIE\": 200,",
															"  \"AANKOMST\": \"2002-10-02T10:03:01.05Z\",",
															"  \"VERTREK\": \"2002-10-02T19:33:01.05Z\",  ",
															"  \"VOORAANMELDING\": 1,",
															"  \"OVERLAND_VLIEGTUIG_ID\": 216,",
															"  \"VOORKEUR_VLIEGTUIG_TYPE\": \"405\",",
															"  \"OPMERKINGEN\": \"Heeft in de middag lierdienst\"",
															"}",
															"",
															"record.ID =  pm.environment.get(\"nieuwID\");",
															"console.log(\"Update id=\" + record.ID);",
															"",
															"var body = JSON.stringify(record); ",
															"pm.environment.set('request_body', body);"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
														"exec": [
															"let skipTest = ((pm.response.code !== 200) || (pm.environment.get(\"skipTest\") === true));",
															"",
															"",
															"(skipTest ? pm.test.skip : pm.test)",
															"(\"AANKOMST lokale tijd\", function () {",
															"    let jsonData = pm.response.json();",
															"    pm.expect(jsonData.AANKOMST.toString()).to.eql(\"12:03:00\");",
															"});",
															"",
															"(skipTest ? pm.test.skip : pm.test)",
															"(\"VERTREK lokale tijd\", function () {",
															"    let jsonData = pm.response.json();",
															"    pm.expect(jsonData.VERTREK.toString()).to.eql(\"21:33:00\");",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{{request_body}}"
												},
												"url": {
													"raw": "{{modify_database_url}}",
													"host": [
														"{{modify_database_url}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8a0ba2f5-04f1-4324-bb31-2e6ad7c068e4",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3b6ab46e-bda3-49b0-a5f7-e4e06531efa0",
												"type": "text/javascript",
												"exec": [
													"",
													"let jsonData = null;",
													"let postData = null;",
													"let skipTest = ((pm.response.code !== 200) || (pm.environment.get(\"skipTest\") === true));",
													"",
													"if (skipTest === false)",
													"{",
													"    postData = JSON.parse(pm.environment.get('request_body'));",
													"    jsonData = pm.response.json();",
													"}",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"ID\", function () {",
													"    if (postData.hasOwnProperty('ID'))",
													"    pm.expect(jsonData.ID.toString()).to.eql(postData.ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"DATUM\", function () {",
													"    if (postData.hasOwnProperty('DATUM'))",
													"        pm.expect(jsonData.DATUM.toString()).to.eql(postData.DATUM.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"OCHTEND_DDI_ID\", function () {",
													"    if (postData.hasOwnProperty('OCHTEND_DDI_ID'))",
													"        pm.expect(jsonData.OCHTEND_DDI_ID.toString()).to.eql(postData.OCHTEND_DDI_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"OCHTEND_INSTRUCTEUR_ID\", function () {",
													"    if (postData.hasOwnProperty('OCHTEND_INSTRUCTEUR_ID'))",
													"        pm.expect(jsonData.OCHTEND_INSTRUCTEUR_ID.toString()).to.eql(postData.OCHTEND_INSTRUCTEUR_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"OCHTEND_STARTLEIDER_ID\", function () {",
													"    if (postData.hasOwnProperty('OCHTEND_STARTLEIDER_ID'))",
													"        pm.expect(jsonData.OCHTEND_STARTLEIDER_ID.toString()).to.eql(postData.OCHTEND_STARTLEIDER_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"OCHTEND_LIERIST_ID\", function () {",
													"    if (postData.hasOwnProperty('OCHTEND_LIERIST_ID'))",
													"        pm.expect(jsonData.OCHTEND_LIERIST_ID.toString()).to.eql(postData.OCHTEND_LIERIST_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"OCHTEND_HULPLIERIST_ID\", function () {",
													"    if (postData.hasOwnProperty('OCHTEND_HULPLIERIST_ID'))",
													"        pm.expect(jsonData.OCHTEND_HULPLIERIST_ID.toString()).to.eql(postData.OCHTEND_HULPLIERIST_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"MIDDAG_DDI_ID\", function () {",
													"    if (postData.hasOwnProperty('MIDDAG_DDI_ID'))",
													"        pm.expect(jsonData.MIDDAG_DDI_ID.toString()).to.eql(postData.MIDDAG_DDI_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"MIDDAG_INSTRUCTEUR_ID\", function () {",
													"    if (postData.hasOwnProperty('MIDDAG_INSTRUCTEUR_ID'))",
													"        pm.expect(jsonData.MIDDAG_INSTRUCTEUR_ID.toString()).to.eql(postData.MIDDAG_INSTRUCTEUR_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"MIDDAG_STARTLEIDER_ID\", function () {",
													"    if (postData.hasOwnProperty('MIDDAG_STARTLEIDER_ID'))",
													"        pm.expect(jsonData.MIDDAG_STARTLEIDER_ID.toString()).to.eql(postData.MIDDAG_STARTLEIDER_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"MIDDAG_LIERIST_ID\", function () {",
													"    if (postData.hasOwnProperty('MIDDAG_LIERIST_ID'))",
													"        pm.expect(jsonData.MIDDAG_LIERIST_ID.toString()).to.eql(postData.MIDDAG_LIERIST_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"MIDDAG_HULPLIERIST_ID\", function () {",
													"    if (postData.hasOwnProperty('MIDDAG_HULPLIERIST_ID'))",
													"        pm.expect(jsonData.MIDDAG_HULPLIERIST_ID.toString()).to.eql(postData.MIDDAG_HULPLIERIST_ID.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"DDWV\", function () {",
													"    if (postData.hasOwnProperty('DDWV'))",
													"        pm.expect(jsonData.DDWV.toString()).to.eql(postData.DDWV.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"CLUB_BEDRIJF\", function () {",
													"    if (postData.hasOwnProperty('CLUB_BEDRIJF'))",
													"        pm.expect(jsonData.CLUB_BEDRIJF.toString()).to.eql(postData.CLUB_BEDRIJF.toString());",
													"});",
													"",
													"(skipTest ? pm.test.skip : pm.test)",
													"(\"VERWIJDERD\", function () {",
													"    pm.expect(jsonData.VERWIJDERD.toString()).to.eql('0');",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "GetObject",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													"let getObjectId =  pm.environment.get(\"getObjectId\");",
													"console.log(\"GetObject id=\" + getObjectId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject?ID={{getObjectId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "{{getObjectId}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "17b676fc-063c-4f1a-8c42-f636d29774b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f5bab96b-eb48-4ee0-b35d-0b32478f8e0e",
										"type": "text/javascript",
										"exec": [
											"// 200 Succesvol",
											"// 409 Kan record niet opslaan vanwege duplicatie",
											"pm.test(\"Status code is 200 or 409\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,409]);",
											"});",
											"",
											"let jsonData = null;",
											"let skipTest = false;",
											"",
											"if (pm.request.method === 'GET')",
											"    skipTest = false;",
											"else",
											"    skipTest = ((pm.response.code !== 200) || (pm.environment.get(\"skipTest\") === true));",
											"",
											"if (pm.responsecode === 409)",
											"    console.log(pm.response.headers.get('X-Error-Message'));",
											"",
											"if (skipTest === false)",
											"    jsonData = pm.response.json();",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft ID', function() {",
											"  pm.expect(jsonData).to.have.property('ID');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft DATUM', function() {",
											"  pm.expect(jsonData).to.have.property('DATUM');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft POSITIE', function() {",
											"  pm.expect(jsonData).to.have.property('POSITIE');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft LID_ID', function() {",
											"  pm.expect(jsonData).to.have.property('LID_ID');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft VOORAANMELDING', function() {",
											"  pm.expect(jsonData).to.have.property('VOORAANMELDING');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft AANKOMST', function() {",
											"  pm.expect(jsonData).to.have.property('AANKOMST');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft VERTREK', function() {",
											"  pm.expect(jsonData).to.have.property('VERTREK');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft OVERLAND_VLIEGTUIG_ID', function() {",
											"  pm.expect(jsonData).to.have.property('OVERLAND_VLIEGTUIG_ID');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft VOORKEUR_VLIEGTUIG_TYPE', function() {",
											"  pm.expect(jsonData).to.have.property('VOORKEUR_VLIEGTUIG_TYPE');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft OPMERKINGEN', function() {",
											"  pm.expect(jsonData).to.have.property('OPMERKINGEN');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft VERWIJDERD', function() {",
											"  pm.expect(jsonData).to.have.property('VERWIJDERD');",
											"});",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"('Heeft LAATSTE_AANPASSING', function() {",
											"  pm.expect(jsonData).to.have.property('LAATSTE_AANPASSING');",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "DeleteObject",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "21f72e65-5e76-4bae-b63d-c77fdf6098bf",
										"exec": [
											"let nieuwID =  pm.environment.get(\"nieuwID\");",
											"console.log(\"DeleteObject id=\" + nieuwID);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5fde7d49-65fa-4709-b00c-56ab7870faeb",
										"exec": [
											"let skipTest = pm.environment.get(\"skipTest\");",
											"",
											"(skipTest ? pm.test.skip : pm.test)",
											"(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{delete_database_url}}?ID={{nieuwID}}",
									"host": [
										"{{delete_database_url}}"
									],
									"query": [
										{
											"key": "ID",
											"value": "{{nieuwID}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "69f40b13-5972-44fb-a002-df9d63c6bab4",
								"type": "text/javascript",
								"exec": [
									"",
									"let modify_database = pm.environment.get(\"modify_database\");",
									"",
									"let onderdeel = pm.environment.get(\"onderdeel\");",
									"",
									"let base_url = pm.environment.get(\"base_url\");",
									"let url = pm.environment.get(\"url\");",
									"",
									"",
									"if (modify_database === \"false\")",
									"{",
									"    console.log(\"Modificatie \" + onderdeel + \" overslaan\");",
									"    pm.environment.set(\"modify_database_url\", base_url + \"/dummy.php\");",
									"    pm.environment.set(\"delete_database_url\", base_url + \"/dummy.php\");",
									"    pm.environment.set(\"skipTest\", true);",
									"}",
									"else",
									"{",
									"    pm.environment.set(\"modify_database_url\", url + \"/SaveObject\");",
									"    pm.environment.set(\"delete_database_url\", url + \"/DeleteObject\");",
									"    pm.environment.set(\"skipTest\", false);",
									"}"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "84bee5c6-0551-4f3f-9888-c29e56856d3a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Error",
					"item": [
						{
							"name": "Data missing 404",
							"item": [
								{
									"name": "GetObject geen data",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													"",
													"let getObjectId =  pm.environment.get(\"getObjectId\");",
													"console.log(\"GetObject id=\" + getObjectId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject?ID=-1",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "-1"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "09e08933-f530-4685-8377-4d7e7a626393",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "75d66cec-853b-4818-b4e6-a5ed70208368",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data validatie error 405",
							"item": [
								{
									"name": "GetObjects LAASTE_AANPASSING geen bool",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "64e90e05-c211-452c-acbb-f3f27f913751",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?LAATSTE_AANPASSING=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "LAATSTE_AANPASSING",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObject met verkeerd ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject?ID=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "ascii"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GetObjects Max geen int",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?MAX=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "MAX",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Start geen int",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?START=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "START",
													"value": "ascii"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "GetObjects Start < 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dba3c95f-1da0-45f5-8883-4431341afb10",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "878602b4-aa4a-4666-8056-ed12df8caf5c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?START=-1",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "START",
													"value": "-1"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"",
													"let record = {",
													"    \"ID\": \"ascii\",",
													"    \"DATUM\": \"2020-01-05\",",
													"    \"DDWV\": \"1\",",
													"    \"CLUB_BEDRIJF\": \"0\"",
													"};",
													"",
													"let verleden = Math.floor(Math.random() * 5000);",
													"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
													"record.DATUM = d.toISOString().substring(0,10);",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan DATUM verkeerde datum",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record =",
													"{",
													"  \"DATUM\": \"2020-02-30\",",
													"  \"POSITIE\": 12,",
													"  \"LID_ID\": 10408,",
													"  \"VOORAANMELDING\": 1,",
													"  \"OVERLAND_VLIEGTUIG_ID\": 200,",
													"  \"VOORKEUR_VLIEGTUIG_TYPE\": \"404, 405\",",
													"  \"OPMERKINGEN\": \"Heeft in de ochtend lierdienst\"",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan POSITIE geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record =",
													"{",
													"  \"DATUM\": \"2010-01-30\",",
													"  \"POSITIE\": \"ascii\",",
													"  \"LID_ID\": 10408,",
													"  \"VOORAANMELDING\": \"1\",",
													"  \"OVERLAND_VLIEGTUIG_ID\": 200,",
													"  \"VOORKEUR_VLIEGTUIG_TYPE\": \"404, 405\",",
													"  \"OPMERKINGEN\": \"Heeft in de ochtend lierdienst\"",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan VOORAANMELDING geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record =",
													"{",
													"  \"DATUM\": \"2010-01-30\",",
													"  \"POSITIE\": 12,",
													"  \"LID_ID\": 10408,",
													"  \"VOORAANMELDING\": \"ascii\",",
													"  \"OVERLAND_VLIEGTUIG_ID\": 200,",
													"  \"VOORKEUR_VLIEGTUIG_TYPE\": \"404, 405\",",
													"  \"OPMERKINGEN\": \"Heeft in de ochtend lierdienst\"",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan VOORAANMELDING geen bool",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record =",
													"{",
													"  \"DATUM\": \"2010-01-30\",",
													"  \"POSITIE\": 12,",
													"  \"LID_ID\": 10408,",
													"  \"VOORAANMELDING\": 6,",
													"  \"OVERLAND_VLIEGTUIG_ID\": 200,",
													"  \"VOORKEUR_VLIEGTUIG_TYPE\": \"404, 405\",",
													"  \"OPMERKINGEN\": \"Heeft in de ochtend lierdienst\"",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan OVERLAND_VLIEGTUIG_ID geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record =",
													"{",
													"  \"DATUM\": \"2026-02-10\",",
													"  \"POSITIE\": 12,",
													"  \"LID_ID\": 10408,",
													"  \"VOORAANMELDING\": 1,",
													"  \"OVERLAND_VLIEGTUIG_ID\": \"ascii\",",
													"  \"VOORKEUR_VLIEGTUIG_TYPE\": \"404, 405\",",
													"  \"OPMERKINGEN\": \"Heeft in de ochtend lierdienst\"",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan VOORKEUR_VLIEGTUIG_TYPE geen int",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record =",
													"{",
													"  \"DATUM\": \"2026-02-10\",",
													"  \"POSITIE\": 12,",
													"  \"LID_ID\": 10408,",
													"  \"VOORAANMELDING\": 1,",
													"  \"OVERLAND_VLIEGTUIG_ID\": \"202\",",
													"  \"VOORKEUR_VLIEGTUIG_TYPE\": \"404, ascii\",",
													"  \"OPMERKINGEN\": \"Heeft in de ochtend lierdienst\"",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan VOORKEUR_VLIEGTUIG_TYPE geen int 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record =",
													"{",
													"  \"DATUM\": \"2026-02-10\",",
													"  \"POSITIE\": 12,",
													"  \"LID_ID\": 10408,",
													"  \"VOORAANMELDING\": 1,",
													"  \"OVERLAND_VLIEGTUIG_ID\": \"202\",",
													"  \"VOORKEUR_VLIEGTUIG_TYPE\": \"ascii\",",
													"  \"OPMERKINGEN\": \"Heeft in de ochtend lierdienst\"",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan DATUM onjuist formaat",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record =",
													"{",
													"  \"DATUM\": \"ascii\",",
													"  \"POSITIE\": 12,",
													"  \"LID_ID\": 10408,",
													"  \"VOORAANMELDING\": 1,",
													"  \"OVERLAND_VLIEGTUIG_ID\": 200,",
													"  \"VOORKEUR_VLIEGTUIG_TYPE\": \"404, 405\",",
													"  \"OPMERKINGEN\": \"Heeft in de ochtend lierdienst\"",
													"}",
													"",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan DATUM onjuist formaat 2",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record =",
													"{",
													"  \"DATUM\": \"2020-2-03\",",
													"  \"POSITIE\": 12,",
													"  \"LID_ID\": 10408,",
													"  \"VOORAANMELDING\": 1,",
													"  \"OVERLAND_VLIEGTUIG_ID\": 200,",
													"  \"VOORKEUR_VLIEGTUIG_TYPE\": \"404, 405\",",
													"  \"OPMERKINGEN\": \"Heeft in de ochtend lierdienst\"",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetObjects SQL injectie",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "64e90e05-c211-452c-acbb-f3f27f913751",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?VELDEN=* from ref_vliegtuigen; -- ",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "VELDEN",
													"value": "* from ref_vliegtuigen; -- "
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								},
								{
									"name": "DeleteObject ID is ascii",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "21f72e65-5e76-4bae-b63d-c77fdf6098bf",
												"exec": [
													"let nieuwID =  pm.environment.get(\"nieuwID\");",
													"console.log(\"DeleteObject id=\" + nieuwID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5fde7d49-65fa-4709-b00c-56ab7870faeb",
												"exec": [
													"let skipTest = pm.environment.get(\"skipTest\");",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/DeleteObject?ID=ascii",
											"host": [
												"{{url}}"
											],
											"path": [
												"DeleteObject"
											],
											"query": [
												{
													"key": "ID",
													"value": "ascii"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "27f9e921-f9bc-4c1f-8c27-2660546a271b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bd363d92-465d-4b49-9ee8-cc9756d431a4",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data missing 406",
							"item": [
								{
									"name": "GetObject zonder ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d66134b6-493e-4490-8c68-30a4ba1086e1",
												"exec": [
													"let nieuwTypesID = pm.environment.get(\"nieuwTypesID\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "DeleteObject zonder ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "21f72e65-5e76-4bae-b63d-c77fdf6098bf",
												"exec": [
													"let nieuwID =  pm.environment.get(\"nieuwID\");",
													"console.log(\"DeleteObject id=\" + nieuwID);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5fde7d49-65fa-4709-b00c-56ab7870faeb",
												"exec": [
													"let skipTest = pm.environment.get(\"skipTest\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/DeleteObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"DeleteObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update record geen ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record = {",
													"    \"DATUM\": \"2020-01-05\",",
													"    \"DDWV\": \"1\",",
													"    \"CLUB_BEDRIJF\": \"0\"",
													"};",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record opslaan zonder data",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record geen DATUM",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record = ",
													"{",
													"//  \"DATUM\": \"2020-01-12\",",
													"  \"POSITIE\": 12,",
													"  \"LID_ID\": 10408,",
													"  \"VOORAANMELDING\": 1,",
													"  \"OVERLAND_VLIEGTUIG_ID\": 200,",
													"  \"VOORKEUR_VLIEGTUIG_TYPE\": \"404, 405\",",
													"  \"OPMERKINGEN\": \"Heeft in de ochtend lierdienst\"",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													"",
													"let skipTest = ((pm.response.code !== 200) || (pm.environment.get(\"skipTest\") === true));",
													"",
													"if (skipTest === false)",
													"{",
													"    let jsonData = pm.response.json();",
													"    pm.environment.set(\"nieuwID\", jsonData.ID);",
													"    console.log(\"nieuwID: \"+ jsonData.ID);",
													"}",
													"else",
													"{",
													"   pm.environment.set(\"nieuwID\", -1); ",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{modify_database_url}}",
											"host": [
												"{{modify_database_url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record geen LID_ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record = ",
													"{",
													"  \"DATUM\": \"2020-01-12\",",
													"  \"POSITIE\": 12,",
													"//  \"LID_ID\": 10408,",
													"  \"VOORAANMELDING\": 1,",
													"  \"OVERLAND_VLIEGTUIG_ID\": 200,",
													"  \"VOORKEUR_VLIEGTUIG_TYPE\": \"404, 405\",",
													"  \"OPMERKINGEN\": \"Heeft in de ochtend lierdienst\"",
													"}",
													"",
													"let verleden = Math.floor(Math.random() * 5000);",
													"let d = new Date((new Date()).valueOf() - 1000*60*60*24*verleden);",
													"record.DATUM = d.toISOString().substring(0,10);",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "67446930-d30f-41da-ba3a-6119d80b11f9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0e68ec47-c3be-4ae0-8126-5d7aa2c4d551",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 406\", function () {",
											"    pm.response.to.have.status(406);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data bestaat al 409",
							"item": [
								{
									"name": "Nieuw record Dubbel ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record = ",
													"{",
													"  \"ID\": 1,",
													"  \"DATUM\": \"2020-01-12\",",
													"  \"POSITIE\": 12,",
													"  \"LID_ID\": 10408,",
													"  \"VOORAANMELDING\": 1,",
													"  \"OVERLAND_VLIEGTUIG_ID\": 200,",
													"  \"VOORKEUR_VLIEGTUIG_TYPE\": \"404, 405\",",
													"  \"OPMERKINGEN\": \"Heeft in de ochtend lierdienst\"",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Nieuw record Dubbele Datum",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record = ",
													"{",
													"  \"DATUM\": \"1999-01-01\",",
													"  \"LID_ID\": 10265",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update record aanpassen DATUM",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record = ",
													"{",
													"  \"ID\": 2,   ",
													"  \"DATUM\": \"2020-06-06\"",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update record aanpassen LID_ID",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "613ad5bc-e965-46d2-be77-2e2c3a2f2a6f",
												"exec": [
													"let record = ",
													"{",
													"  \"ID\": 2,   ",
													"  \"LID_ID\": \"10001\"",
													"}",
													"",
													"var body = JSON.stringify(record); ",
													"pm.environment.set('request_body', body);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ca6558f7-1e7c-4d75-bf3f-9bd503e379df",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{{request_body}}"
										},
										"url": {
											"raw": "{{url}}/SaveObject",
											"host": [
												"{{url}}"
											],
											"path": [
												"SaveObject"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0ef4ebe0-a35b-42b7-aca0-56e6f77a332d",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2e001eb2-5096-4498-ac48-b453d4a27ea4",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 409\", function () {",
											"    pm.response.to.have.status(409);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data verwerking error 500",
							"item": [
								{
									"name": "GetObjects VELDEN, onbekend veld",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "15266017-a3f5-45cf-b74d-7b54fd52a639",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "64e90e05-c211-452c-acbb-f3f27f913751",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/GetObjects?MAX=2&VELDEN=ID, BESTAATNIET",
											"host": [
												"{{url}}"
											],
											"path": [
												"GetObjects"
											],
											"query": [
												{
													"key": "MAX",
													"value": "2"
												},
												{
													"key": "VELDEN",
													"value": "ID, BESTAATNIET"
												}
											]
										},
										"description": "Haal alle types op"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c5ddb210-9236-479a-bfa8-52a3dad9da42",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0dddcec8-d0b6-41de-b1d2-670b268ceabc",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "27071642-ff20-4d20-8308-cf53e1ca765a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "95765a89-34e8-49dc-ba2b-7b35a08a4690",
								"type": "text/javascript",
								"exec": [
									"console.log(pm.response.headers.get('X-Error-Message'));"
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "29b276b6-b71e-4a38-8eb6-5c19e2efdddd",
						"type": "text/javascript",
						"exec": [
							"console.log(\"-----> \" + pm.info.requestName);",
							"",
							"let onderdeel = \"AanwezigLeden\";",
							"pm.environment.set(\"onderdeel\", onderdeel);",
							"",
							"let url = pm.environment.get(\"base_url\") + \"/\" + onderdeel;",
							"pm.environment.set(\"url\", url);",
							"",
							"console.log(\"Url:\" + url);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d742e042-5361-48e8-af97-6144f08b79ec",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}