openapi: 3.0.2
info:
  title: Rooster
  description: Rooster data
  version: '1.0'
         
paths:
  /Rooster/CreateTable:
    post:
      summary: Creeer database objecten
      parameters:
        - in: query
          name: FILLDATA
          description: Dummy records aanmaken
          required: true
          schema:
            type: boolean
      responses:
        201:
          description: "Aangemaakt, Tabel toegevoegd"
        500:
          description: "Data verwerkingsfout, bijv omdat de tabel al bestaat" 

  /Rooster/CreateViews:
    post:
      summary: Creeer database views
      responses:
        201:
          description: "Aangemaakt, View toegevoegd"
        500:
          description: "Data verwerkingsfout, view niet aangemaak"               
          
  /Rooster/GetObject:
    get:
      summary: 'Haal een enkele dag op uit de database. Query parameters worden in AND conditie gebruikt'
      parameters:
        - in: query
          name: ID
          description: 'Database ID van het rooster record'
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: DATUM
          description: 'Datum van het rooster'
          required: false
          schema:
            type: string
            format: date
            example: 2017-07-21 
      responses:
        200:
          description: "OK, data succesvol opgehaald"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oper_rooster'
        404:
          description: "Data niet gevonden"
        405:
          description: "Methode niet toegestaan, input validatie error"  
        406:
          description: "Niet aanvaardbaar, input ontbreekt"   
        500:
          description: "Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer)"       

  /Rooster/GetObjects:
    get:
      summary: Haal een lijst met roosters op uit de database. Query parameters worden in AND conditie gebruikt
      parameters:
        - in: query
          name: LAATSTE_AANPASSING
          description: Laatste aanpassing op basis van records in dataset. Bedoeld om data verbruik te verminderen. Dataset is daarom leeg
          required: false
          schema:
            type: boolean
        - in: query
          name: SORT
          description: Sortering van de velden in ORDER BY formaat. Default = DATUM DESC
          required: false
          schema:
            type: string     
        - in: query
          name: MAX
          description: Maximum aantal records in de dataset. Gebruikt in LIMIT query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1  
        - in: query
          name: START
          description: Eerste record in de dataset. Gebruikt in LIMIT query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1  
        - in: query        
          name: VELDEN
          description: Welke velden moet opgenomen worden in de dataset
          required: false
          schema:
            type: string                                    
        - in: query        
          name: DATUM
          description: Zoek op datum
          required: false
          schema:
            type: string
            format: date                          
                                   
      responses:
        200:
          description: "OK, data succesvol opgehaald"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view_rooster'
        405:
          description: "Methode niet toegestaan, input validatie error"  
        500:
          description: "Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer)"         

  /Rooster/DeleteObject:
    delete:
      summary: Markeer record als verwijderd. Query parameters worden in AND conditie gebruikt
      parameters:
        - in: query
          name: ID
          description: Database ID van het rooster record
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: DATUM
          description: Datum van het rooster
          required: false
          schema:
            type: string
            format: date
            example: 2017-07-21  
      responses:
        204:
          description: "Rooster verwijderd"
        401:
          description: "Niet geautoriseerd, geen schrijfrechten"  
        404:
          description: "Data niet gevonden"          
        405:
          description: "Methode niet toegestaan, input validatie error"  
        406:
          description: "Niet aanvaardbaar, input ontbreekt"              
        500:
          description: "Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer)" 

  /Rooster/SaveObject:
    post:
      summary: Voeg nieuw rooster toe
      requestBody:
        description: Rooster data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/oper_rooster'
      responses:
        200:
          description: "OK, data succesvol toegevoegd"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oper_rooster'  
        401:
          description: "Niet geautoriseerd, geen schrijfrechten"           
        405:
          description: "Methode niet toegestaan, input validatie error"  
        406:
          description: "Niet aanvaardbaar, input ontbreekt"       
        409:
          description: "Conflict, datum bestaat al"  
        500:
          description: "Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer)"                       
    put:
      summary: Update bestaand rooster
      requestBody:
        description: Rooster data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/oper_rooster'
      responses:
        200:
          description: "OK, data succesvol aangepast"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oper_rooster'  
        401:
          description: "Niet geautoriseerd, geen schrijfrechten"  
        404:
          description: "Data niet gevonden"          
        405:
          description: "Methode niet toegestaan, input validatie error"  
        406:
          description: "Niet aanvaardbaar, input ontbreekt"       
        409:
          description: "Conflict, datum bestaat al"  
        500:
          description: "Data verwerkingsfout, bijv onjuiste veldwaarde (string ipv integer)"         

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: Eerst inloggen voordat API beschikbaar is

  schemas:
    oper_rooster:
      type: object
      properties:
        ID:
          description: Database ID van het rooster record
          type: integer
          format: int32
          example: 77
        DATUM:
          description: Datum van de vliegdag 
          type: string
          format: date
          example: 2017-07-21             
        OCHTEND_DDI_ID:
          description: De DDI voor het ochtend bedrijf. Link naar leden tabel 
          type: integer
          format: int32
          example: 129          
        OCHTEND_INSTRUCTEUR_ID:
          description: De instructeur voor het ochtend bedrijf. Link naar leden tabel 
          type: integer
          format: int32
          example: 19
        OCHTEND_STARTLEIDER_ID:
          description: De startleider voor het ochtend bedrijf. Link naar leden tabel 
          type: integer
          format: int32
          example: 24          
        OCHTEND_LIERIST_ID:
          description: De lierist voor het ochtend bedrijf. Link naar leden tabel 
          type: integer
          format: int32
          example: 722
        OCHTEND_HULPLIERIST_ID:
          description: De hulplierist voor het ochtend bedrijf. Link naar leden tabel 
          type: integer
          format: int32
          example: 214        
        MIDDAG_DDI_ID:
          description: De DDI voor het middag bedrijf. Link naar leden tabel 
          type: integer
          format: int32
          example: 129          
        MIDDAG_INSTRUCTEUR_ID:
          description: De instructeur voor het middag bedrijf. Link naar leden tabel 
          type: integer
          format: int32
          example: 129
        MIDDAG_STARTLEIDER_ID:
          description: De startleider voor het middag bedrijf. Link naar leden tabel 
          type: integer
          format: int32
          example: 24          
        MIDDAG_LIERIST_ID:
          description: De lierist voor het middag bedrijf. Link naar leden tabel 
          type: integer
          format: int32
          example: 12
        MIDDAG_HULPLIERIST_ID:
          description: De hulplierist voor het middag bedrijf. Link naar leden tabel 
          type: integer
          format: int32
          example: 214  
        DDWV:
          description: Is het een DDWV dag? Waarde 0..1
          type: boolean
          example: 0
        CLUB_BEDRIJF:
          description: Is er een clubbedrijf Waarde 0..1
          type: boolean
          example: 1        
        VERWIJDERD:
          description: Is dit record gemarkeerd als verwijderd?  Waarde 0..1
          type: boolean
          example: 0  
        LAATSTE_AANPASSING:
          description: Tijdstempel van laaste aanpassing in de database
          type: string
          format: date-time   
          example: 2020-01-04 12:06:22 
    view_rooster:
      type: object
      properties:
        totaal:
          description: Aantal records dat voldoet aan de criteria in de database
          type: integer
          format: int32
          example: 287
        laatste_aanpassing:
          description: Tijdstempel van laaste aanpassing in de database van de records dat voldoet aan de criteria
          type: string
          format: date-time   
          example: 2020-01-04 12:06:22 
        dataset:
          description: De dataset met records
          type: array
          items: 
            type: object
            allOf:
              - $ref: '#/components/schemas/oper_rooster'
              - type: object
                properties:
                  OCHTEND_DDI:
                    description: De naam van de DDI voor het ochtend bedrijf
                    type: string
                    example: Meneer de Uil        
                  OCHTEND_INSTRUCTEUR:
                    description: De naam van de instructeur voor het ochtend bedrijf
                    type: string
                    example: Juffrouw Ooievaar
                  OCHTEND_STARTLEIDER:
                    description: De naam van de startleider voor het ochtend bedrijf
                    type: string
                    example: Willem Bever          
                  OCHTEND_LIERIST:
                    description: De naam van de lierist voor het ochtend bedrijf 
                    type: string
                    example: Truus de Mier
                  OCHTEND_HULPLIERIST:
                    description: De naam van de hulplierist voor het ochtend bedrijf
                    type: string
                    example: Gerrit de Postduif    
                  MIDDAG_DDI:
                    description: De naam van de DDI voor het middag bedrijf
                    type: string
                    example: Teun Stier        
                  MIDDAG_INSTRUCTEUR:
                    description: De naam van de instructeur voor het middag bedrijf
                    type: string
                    example: Lowieke de Vos
                  MIDDAG_STARTLEIDER:
                    description: De naam van de startleider voor het middag bedrijf
                    type: string
                    example: Bor de Wolf          
                  MIDDAG_LIERIST:
                    description: De naam van de lierist voor het middag bedrijf 
                    type: string
                    example: Zoef de Haas
                  MIDDAG_HULPLIERIST:
                    description: De naam van de hulplierist voor het middag bedrijf 
                    type: string
                    example: Isadora Paradijsvogel          